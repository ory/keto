openapi: 3.0.3
info:
  contact:
    email: hi@ory.sh
  description: |
    Documentation for all of Ory Keto's REST APIs. gRPC is documented separately.
  license:
    name: Apache 2.0
  title: Ory Keto API
  version: ""
servers:
- url: /
paths:
  /admin/relation-tuples:
    delete:
      operationId: deleteRelationships
      parameters:
      - description: The namespace this relation tuple lives in.
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The object related by this tuple.
          It is an object in the namespace of the tuple.
        explode: true
        in: query
        name: object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between an Object and a Subject.
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: A concrete id of the subject.
        explode: true
        in: query
        name: subject_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The namespace of the object and relation
          referenced in this subject set.
        explode: true
        in: query
        name: subject_set.namespace
        required: false
        schema:
          type: string
        style: form
      - description: The object related by this subject set.
        explode: true
        in: query
        name: subject_set.object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between the object and the subjects.
        explode: true
        in: query
        name: subject_set.relation
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: An empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Deletes relationships based on relation query
      tags:
      - relationship
    patch:
      operationId: patchRelationships
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/relationshipPatch'
              type: array
        description: |-
          The write delta for the relationships operated in one single transaction.
          Either all actions succeed or no change takes effect on error.
        required: true
        x-originalParamName: relationTupleDeltas
      responses:
        "204":
          description: An empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Writes one or more relationships in a single transaction.
      tags:
      - relationship
    put:
      operationId: createRelationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRelationshipBody'
        description: The relationship to create.
        required: true
        x-originalParamName: relationTuple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relationship'
          description: The created relationship.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Creates a relationship
      tags:
      - relationship
  /health/alive:
    get:
      description: |-
        This endpoint returns a HTTP 200 status code when Ory Keto is accepting incoming
        HTTP requests. This status does currently not include checks whether the database connection is working.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of this service, the health status will never
        refer to the cluster state, only to a single instance.
      operationId: isAlive
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/isAlive_200_response'
          description: Ory Keto is ready to accept connections.
        default:
          content:
            text/plain:
              schema:
                type: string
          description: Unexpected error
      summary: Check HTTP Server Status
      tags:
      - metadata
  /health/ready:
    get:
      description: |-
        This endpoint returns a HTTP 200 status code when Ory Keto is up running and the environment dependencies (e.g.
        the database) are responsive as well.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of Ory Keto, the health status will never
        refer to the cluster state, only to a single instance.
      operationId: isReady
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/isAlive_200_response'
          description: Ory Keto is ready to accept requests.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/isReady_503_response'
          description: Ory Kratos is not yet ready to accept requests.
        default:
          content:
            text/plain:
              schema:
                type: string
          description: Unexpected error
      summary: Check HTTP Server and Database Status
      tags:
      - metadata
  /namespaces:
    get:
      description: Get all namespaces.
      operationId: listRelationshipNamespaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relationshipNamespaces'
          description: The list of namespaces.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Lists Namespaces
      tags:
      - relationship
  /opl/syntax/check:
    post:
      operationId: checkOplSyntax
      requestBody:
        content:
          text/plain:
            schema:
              format: byte
              type: string
        required: true
        x-originalParamName: content
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkOplSyntaxResult'
          description: The result of the syntax checker
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Performs a syntax check request.
      tags:
      - relationship
  /relation-tuples:
    get:
      operationId: getRelationships
      parameters:
      - description: |-
          Optional. The maximum number of
          RelationTuples to return in the response.

          Default: 100
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: |-
          Optional. An opaque pagination token returned from
          a previous call to `ListRelationTuples` that
          indicates where the page should start at.

          An empty token denotes the first page. All successive
          pages require the token from the previous page.
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          type: string
        style: form
      - description: The namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: The related object in this check.
        explode: true
        in: query
        name: object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between the Object and the Subject.
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: A concrete id of the subject.
        explode: true
        in: query
        name: subject_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The namespace of the object and relation
          referenced in this subject set.
        explode: true
        in: query
        name: subject_set.namespace
        required: false
        schema:
          type: string
        style: form
      - description: The object related by this subject set.
        explode: true
        in: query
        name: subject_set.object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between the object and the subjects.
        explode: true
        in: query
        name: subject_set.relation
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relationships'
          description: The list of relationships.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Lists ACL relationships.
      tags:
      - relationship
  /relation-tuples/batch/check:
    post:
      description: "To learn how relationship tuples and the check works, head over\
        \ to [the documentation](https://www.ory.sh/docs/keto/concepts/api-overview)."
      operationId: batchCheckPermission
      parameters:
      - description: |-
          The maximum depth to search for a relation.

          If the value is less than 1 or greater than the global
          max-depth then the global max-depth will be used instead.
        explode: true
        in: query
        name: max-depth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchCheckPermissionBody'
        description: Batch Check Permission Body.
        required: true
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchCheckPermissionResult'
          description: "The response of the permission check, in case it is allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Performs an authorization check for a batch of tuples.
      tags:
      - permission
  /relation-tuples/check:
    get:
      operationId: checkPermissionOrError
      parameters:
      - description: |-
          The namespace to evaluate the check.

          Note: If you use the expand-API and the check
          evaluates a RelationTuple specifying a SubjectSet as
          subject or due to a rewrite rule in a namespace config
          this check request may involve other namespaces automatically.
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: The related object in this check.
        explode: true
        in: query
        name: object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between the Object and the Subject.
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: A concrete id of the subject.
        explode: true
        in: query
        name: subject_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The namespace of the object and relation
          referenced in this subject set.
        explode: true
        in: query
        name: subject_set.namespace
        required: false
        schema:
          type: string
        style: form
      - description: The object related by this subject set.
        explode: true
        in: query
        name: subject_set.object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between the object and the subjects.
        explode: true
        in: query
        name: subject_set.relation
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The maximum depth to search for a relation.

          If the value is less than 1 or greater than the global
          max-depth then the global max-depth will be used instead.
        explode: true
        in: query
        name: max-depth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is not allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Performs an authorization check.
      tags:
      - permission
    post:
      operationId: postCheckPermissionOrError
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCheckPermissionBody'
        description: |-
          The request for a CheckService.Check RPC.
          Checks whether a specific subject is related to an object.
        required: true
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is not allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Performs an authorization check.
      tags:
      - permission
  /relation-tuples/check/openapi:
    get:
      operationId: checkPermission
      parameters:
      - description: |-
          The namespace to evaluate the check.

          Note: If you use the expand-API and the check
          evaluates a RelationTuple specifying a SubjectSet as
          subject or due to a rewrite rule in a namespace config
          this check request may involve other namespaces automatically.
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: The related object in this check.
        explode: true
        in: query
        name: object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between the Object and the Subject.
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: A concrete id of the subject.
        explode: true
        in: query
        name: subject_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The namespace of the object and relation
          referenced in this subject set.
        explode: true
        in: query
        name: subject_set.namespace
        required: false
        schema:
          type: string
        style: form
      - description: The object related by this subject set.
        explode: true
        in: query
        name: subject_set.object
        required: false
        schema:
          type: string
        style: form
      - description: The relation between the object and the subjects.
        explode: true
        in: query
        name: subject_set.relation
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The maximum depth to search for a relation.

          If the value is less than 1 or greater than the global
          max-depth then the global max-depth will be used instead.
        explode: true
        in: query
        name: max-depth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is not allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Performs an authorization check.
      tags:
      - permission
    post:
      operationId: postCheckPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCheckPermissionBody'
        description: |-
          The request for a CheckService.Check RPC.
          Checks whether a specific subject is related to an object.
        required: true
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPermissionResult'
          description: "The response of the permission check, in case it is not allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Performs an authorization check.
      tags:
      - permission
  /relation-tuples/expand:
    get:
      operationId: expandPermissions
      parameters:
      - description: |-
          The maximum depth of tree to build.

          If the value is less than 1 or greater than the global
          max-depth then the global max-depth will be used instead.

          It is important to set this parameter to a meaningful
          value. Ponder how deep you really want to display this.
        explode: true
        in: query
        name: max-depth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: |-
          The namespace of the object and relation
          referenced in this subject set.
        explode: true
        in: query
        name: namespace
        required: true
        schema:
          type: string
        style: form
      - description: The object related by this subject set.
        explode: true
        in: query
        name: object
        required: true
        schema:
          type: string
        style: form
      - description: The relation between the object and the subjects.
        explode: true
        in: query
        name: relation
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expandedPermissionTree'
          description: "The response of the permission check, in case it is allowed.\
            \ For the `/openapi` endpoints, the status code is always 200."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Expands the subject set into a tree of subjects.
      tags:
      - permission
  /version:
    get:
      description: |-
        This endpoint returns the version of Ory Keto.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of this service, the version will never
        refer to the cluster state, only to a single instance.
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVersion_200_response'
          description: Returns the Ory Keto version.
      summary: Return Running Software Version.
      tags:
      - metadata
components:
  schemas:
    UUID:
      format: uuid4
      type: string
    batchCheckPermissionBody:
      properties:
        tuples:
          items:
            $ref: '#/components/schemas/relationship'
          type: array
      type: object
    batchCheckPermissionResult:
      description: The response for a CheckService.BatchCheck rpc.
      example:
        results:
        - allowed: true
          error: error
        - allowed: true
          error: error
      properties:
        results:
          description: |-
            The results of the batch check. The order of these
            results will match the order of the input.
          items:
            $ref: '#/components/schemas/checkPermissionResultWithError'
          type: array
      type: object
    checkOplSyntaxResult:
      example:
        parseErrors:
        - start:
            Line: 0
            column: 6
          end:
            Line: 0
            column: 6
          message: message
        - start:
            Line: 0
            column: 6
          end:
            Line: 0
            column: 6
          message: message
        errors:
        - start:
            Line: 0
            column: 6
          end:
            Line: 0
            column: 6
          message: message
        - start:
            Line: 0
            column: 6
          end:
            Line: 0
            column: 6
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ory.keto.opl.v1alpha1.ParseError'
          type: array
        parseErrors:
          items:
            $ref: '#/components/schemas/ory.keto.opl.v1alpha1.ParseError'
          type: array
      type: object
    checkPermissionResult:
      description: The response for a permission check.
      example:
        allowed: true
      properties:
        allowed:
          description: |-
            Whether the specified subject (id)
            is related to the requested object.

            It is false by default if no ACL matches.
          type: boolean
      required:
      - allowed
      type: object
    checkPermissionResultWithError:
      description: The response for an individual check in the CheckService.BatchCheck
        rpc.
      example:
        allowed: true
        error: error
      properties:
        allowed:
          description: |-
            Whether the specified subject (id)
            is related to the requested object.

            It is false by default if no ACL matches.
          type: boolean
        error:
          description: |-
            If there was an error checking the tuple,
            this will contain the error message.

            If the check was performed successfully, this will be empty.
          type: string
      required:
      - allowed
      type: object
    createRelationshipBody:
      properties:
        namespace:
          description: The namespace this relation tuple lives in.
          type: string
        object:
          description: |-
            The object related by this tuple.
            It is an object in the namespace of the tuple.
          type: string
        relation:
          description: The relation between an Object and a Subject.
          type: string
        subject_id:
          description: A concrete id of the subject.
          type: string
        subject_set:
          $ref: '#/components/schemas/subjectSet'
      type: object
    errorGeneric:
      description: The standard Ory JSON API error format.
      properties:
        error:
          $ref: '#/components/schemas/errorGeneric.Error'
      required:
      - error
      title: JSON API Error Response
      type: object
    errorGeneric.Error:
      properties:
        code:
          example: "404"
          format: int64
          title: The status code
          type: string
        debug:
          description: Debug information is often not exposed to protect against leaking
            sensitive information.
          title: Debug information
          type: string
        details:
          additionalProperties:
            type: string
          description: Further details about the error.
          title: Further error details
          type: object
        id:
          description: The error ID is useful when trying to identify various errors
            in application logic.
          title: The error ID
          type: string
        message:
          description: The error's message (required).
          example: The requested resource could not be found.
          title: The error message
          type: string
        reason:
          description: Reason holds a human-readable reason for the error.
          title: The error reason
          type: string
        request:
          description: |-
            The request ID is often exposed internally in order to trace
            errors across service architectures. This is often a UUID.
          example: d7ef54b1-ec15-46e6-bccb-524b82c035e6
          title: The request ID
          type: string
        status:
          description: Status holds the human-readable HTTP status code.
          example: Not Found
          title: The status description
          type: string
      required:
      - message
      type: object
    expandedPermissionTree:
      example:
        tuple:
          subject_id: subject_id
          namespace: namespace
          object: object
          relation: relation
          subject_set:
            namespace: namespace
            object: object
            relation: relation
        children:
        - null
        - null
        subject:
          set:
            namespace: namespace
            object: object
            relation: relation
          id: id
        type: null
      properties:
        children:
          description: |-
            The children of this node.

            This is never set if `node_type` == `NODE_TYPE_LEAF`.
          items:
            $ref: '#/components/schemas/expandedPermissionTree'
          type: array
        subject:
          $ref: '#/components/schemas/ory.keto.relation_tuples.v1alpha2.Subject'
        tuple:
          $ref: '#/components/schemas/relationship'
        type:
          $ref: '#/components/schemas/ory.keto.relation_tuples.v1alpha2.NodeType'
      required:
      - type
      type: object
    ory.keto.opl.v1alpha1.ParseError:
      example:
        start:
          Line: 0
          column: 6
        end:
          Line: 0
          column: 6
        message: message
      properties:
        end:
          $ref: '#/components/schemas/ory.keto.opl.v1alpha1.SourcePosition'
        message:
          type: string
        start:
          $ref: '#/components/schemas/ory.keto.opl.v1alpha1.SourcePosition'
      type: object
    ory.keto.opl.v1alpha1.SourcePosition:
      example:
        Line: 0
        column: 6
      properties:
        Line:
          format: int64
          type: integer
        column:
          format: int64
          type: integer
      type: object
    ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse:
      description: The response from creating a new relationship.
      properties:
        relationTuple:
          $ref: '#/components/schemas/relationship'
      type: object
    ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse:
      type: object
    ory.keto.relation_tuples.v1alpha2.ExpandResponse:
      description: The response for a ExpandService.Expand RPC.
      properties:
        tree:
          $ref: '#/components/schemas/expandedPermissionTree'
      type: object
    ory.keto.relation_tuples.v1alpha2.GetVersionResponse:
      description: Response of the VersionService.GetVersion RPC.
      properties:
        version:
          description: The version string of the Ory Keto instance.
          type: string
      type: object
    ory.keto.relation_tuples.v1alpha2.Namespace:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    ory.keto.relation_tuples.v1alpha2.NodeType:
      default: unspecified
      description: |2-
         - union: This node expands to a union of all children.
         - exclusion: Not implemented yet.
         - intersection: Not implemented yet.
         - leaf: This node is a leaf and contains no children.
        Its subject is a `SubjectID` unless `max_depth` was reached.
         - tuple_to_subject_set: This node is a leaf and contains no children.
        Its subject is a `SubjectID` unless `max_depth` was reached.
         - computed_subject_set: This node is a leaf and contains no children.
        Its subject is a `SubjectID` unless `max_depth` was reached.
         - not: This node is a leaf and contains no children.
        Its subject is a `SubjectID` unless `max_depth` was reached.
      enum:
      - unspecified
      - union
      - exclusion
      - intersection
      - leaf
      - tuple_to_subject_set
      - computed_subject_set
      - not
      type: string
    ory.keto.relation_tuples.v1alpha2.Subject:
      description: |-
        Subject is either a concrete subject id or
        a `SubjectSet` expanding to more Subjects.
      example:
        set:
          namespace: namespace
          object: object
          relation: relation
        id: id
      properties:
        id:
          description: A concrete id of the subject.
          type: string
        set:
          $ref: '#/components/schemas/subjectSet'
      type: object
    ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse:
      description: The response of a WriteService.TransactRelationTuples rpc.
      type: object
    postCheckPermissionBody:
      description: |-
        The request for a CheckService.Check RPC.
        Checks whether a specific subject is related to an object.
      properties:
        max-depth:
          description: |-
            The maximum depth to search for a relation.

            If the value is less than 1 or greater than the global
            max-depth then the global max-depth will be used instead.
          format: int32
          type: integer
        namespace:
          description: |-
            The namespace to evaluate the check.

            Note: If you use the expand-API and the check
            evaluates a RelationTuple specifying a SubjectSet as
            subject or due to a rewrite rule in a namespace config
            this check request may involve other namespaces automatically.
          type: string
        object:
          description: The related object in this check.
          type: string
        relation:
          description: The relation between the Object and the Subject.
          type: string
        subject_id:
          description: A concrete id of the subject.
          type: string
        subject_set:
          $ref: '#/components/schemas/subjectSetQuery'
      type: object
    relationship:
      description: RelationTuple defines a relation between an Object and a Subject.
      example:
        subject_id: subject_id
        namespace: namespace
        object: object
        relation: relation
        subject_set:
          namespace: namespace
          object: object
          relation: relation
      properties:
        namespace:
          description: The namespace this relation tuple lives in.
          type: string
        object:
          description: |-
            The object related by this tuple.
            It is an object in the namespace of the tuple.
          type: string
        relation:
          description: The relation between an Object and a Subject.
          type: string
        subject_id:
          description: A concrete id of the subject.
          type: string
        subject_set:
          $ref: '#/components/schemas/subjectSet'
      required:
      - namespace
      - object
      - relation
      type: object
    relationshipNamespaces:
      example:
        namespaces:
        - name: name
        - name: name
      properties:
        namespaces:
          items:
            $ref: '#/components/schemas/ory.keto.relation_tuples.v1alpha2.Namespace'
          type: array
      type: object
    relationshipPatch:
      description: Write-delta for a TransactRelationTuplesRequest.
      properties:
        action:
          $ref: '#/components/schemas/relationshipPatch.Action'
        relation_tuple:
          $ref: '#/components/schemas/relationship'
      required:
      - action
      - relation_tuple
      type: object
    relationshipPatch.Action:
      default: ACTION_UNSPECIFIED
      description: |2-
         - ACTION_UNSPECIFIED: Unspecified.
        The `TransactRelationTuples` RPC ignores this
        RelationTupleDelta if an action was unspecified.
         - insert: Insertion of a new RelationTuple.
        It is ignored if already existing.
         - delete: Deletion of the RelationTuple.
        It is ignored if it does not exist.
      enum:
      - ACTION_UNSPECIFIED
      - insert
      - delete
      type: string
    relationships:
      description: The response of a ReadService.ListRelationTuples RPC.
      example:
        next_page_token: next_page_token
        relation_tuples:
        - subject_id: subject_id
          namespace: namespace
          object: object
          relation: relation
          subject_set:
            namespace: namespace
            object: object
            relation: relation
        - subject_id: subject_id
          namespace: namespace
          object: object
          relation: relation
          subject_set:
            namespace: namespace
            object: object
            relation: relation
      properties:
        next_page_token:
          description: |-
            The token required to get the next page.
            If this is the last page, the token will be the empty string.
          type: string
        relation_tuples:
          description: The relationships matching the list request.
          items:
            $ref: '#/components/schemas/relationship'
          type: array
      type: object
    subjectSet:
      description: |-
        SubjectSet refers to all subjects who have
        the same `relation` on an `object`.
      example:
        namespace: namespace
        object: object
        relation: relation
      properties:
        namespace:
          description: |-
            The namespace of the object and relation
            referenced in this subject set.
          type: string
        object:
          description: The object related by this subject set.
          type: string
        relation:
          description: The relation between the object and the subjects.
          type: string
      required:
      - namespace
      - object
      - relation
      type: object
    subjectSetQuery:
      description: |-
        SubjectSetQuery refers to all subjects who have
        the same `relation` on an `object`.
      properties:
        namespace:
          description: |-
            The namespace of the object and relation
            referenced in this subject set.
          type: string
        object:
          description: The object related by this subject set.
          type: string
        relation:
          description: The relation between the object and the subjects.
          type: string
      type: object
    isAlive_200_response:
      example:
        status: status
      properties:
        status:
          description: Always "ok".
          type: string
      required:
      - status
      type: object
    isReady_503_response:
      properties:
        errors:
          additionalProperties:
            type: string
          description: Errors contains a list of errors that caused the not ready
            status.
          type: object
      required:
      - errors
      type: object
    getVersion_200_response:
      example:
        version: version
      properties:
        version:
          description: The version of Ory Keto.
          type: string
      required:
      - version
      type: object
