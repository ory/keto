/*
 * Ory Keto API
 *
 * Documentation for all of Ory Keto's REST APIs. gRPC is documented separately.
 *
 * API version:
 * Contact: hi@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PostBatchCheckPermissionOrErrorBody Post Batch Check Permission Or Error Body
type PostBatchCheckPermissionOrErrorBody struct {
	Tuples []Relationship `json:"tuples,omitempty"`
}

// NewPostBatchCheckPermissionOrErrorBody instantiates a new PostBatchCheckPermissionOrErrorBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostBatchCheckPermissionOrErrorBody() *PostBatchCheckPermissionOrErrorBody {
	this := PostBatchCheckPermissionOrErrorBody{}
	return &this
}

// NewPostBatchCheckPermissionOrErrorBodyWithDefaults instantiates a new PostBatchCheckPermissionOrErrorBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostBatchCheckPermissionOrErrorBodyWithDefaults() *PostBatchCheckPermissionOrErrorBody {
	this := PostBatchCheckPermissionOrErrorBody{}
	return &this
}

// GetTuples returns the Tuples field value if set, zero value otherwise.
func (o *PostBatchCheckPermissionOrErrorBody) GetTuples() []Relationship {
	if o == nil || o.Tuples == nil {
		var ret []Relationship
		return ret
	}
	return o.Tuples
}

// GetTuplesOk returns a tuple with the Tuples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBatchCheckPermissionOrErrorBody) GetTuplesOk() ([]Relationship, bool) {
	if o == nil || o.Tuples == nil {
		return nil, false
	}
	return o.Tuples, true
}

// HasTuples returns a boolean if a field has been set.
func (o *PostBatchCheckPermissionOrErrorBody) HasTuples() bool {
	if o != nil && o.Tuples != nil {
		return true
	}

	return false
}

// SetTuples gets a reference to the given []Relationship and assigns it to the Tuples field.
func (o *PostBatchCheckPermissionOrErrorBody) SetTuples(v []Relationship) {
	o.Tuples = v
}

func (o PostBatchCheckPermissionOrErrorBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tuples != nil {
		toSerialize["tuples"] = o.Tuples
	}
	return json.Marshal(toSerialize)
}

type NullablePostBatchCheckPermissionOrErrorBody struct {
	value *PostBatchCheckPermissionOrErrorBody
	isSet bool
}

func (v NullablePostBatchCheckPermissionOrErrorBody) Get() *PostBatchCheckPermissionOrErrorBody {
	return v.value
}

func (v *NullablePostBatchCheckPermissionOrErrorBody) Set(val *PostBatchCheckPermissionOrErrorBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBatchCheckPermissionOrErrorBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBatchCheckPermissionOrErrorBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBatchCheckPermissionOrErrorBody(val *PostBatchCheckPermissionOrErrorBody) *NullablePostBatchCheckPermissionOrErrorBody {
	return &NullablePostBatchCheckPermissionOrErrorBody{value: val, isSet: true}
}

func (v NullablePostBatchCheckPermissionOrErrorBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBatchCheckPermissionOrErrorBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
