/*
 * Ory Keto API
 *
 * Documentation for all of Ory Keto's REST APIs. gRPC is documented separately.
 *
 * API version:
 * Contact: hi@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OryKetoOplV1alpha1ParseError struct for OryKetoOplV1alpha1ParseError
type OryKetoOplV1alpha1ParseError struct {
	End     *OryKetoOplV1alpha1SourcePosition `json:"end,omitempty"`
	Message *string                           `json:"message,omitempty"`
	Start   *OryKetoOplV1alpha1SourcePosition `json:"start,omitempty"`
}

// NewOryKetoOplV1alpha1ParseError instantiates a new OryKetoOplV1alpha1ParseError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOryKetoOplV1alpha1ParseError() *OryKetoOplV1alpha1ParseError {
	this := OryKetoOplV1alpha1ParseError{}
	return &this
}

// NewOryKetoOplV1alpha1ParseErrorWithDefaults instantiates a new OryKetoOplV1alpha1ParseError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOryKetoOplV1alpha1ParseErrorWithDefaults() *OryKetoOplV1alpha1ParseError {
	this := OryKetoOplV1alpha1ParseError{}
	return &this
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *OryKetoOplV1alpha1ParseError) GetEnd() OryKetoOplV1alpha1SourcePosition {
	if o == nil || o.End == nil {
		var ret OryKetoOplV1alpha1SourcePosition
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OryKetoOplV1alpha1ParseError) GetEndOk() (*OryKetoOplV1alpha1SourcePosition, bool) {
	if o == nil || o.End == nil {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *OryKetoOplV1alpha1ParseError) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given OryKetoOplV1alpha1SourcePosition and assigns it to the End field.
func (o *OryKetoOplV1alpha1ParseError) SetEnd(v OryKetoOplV1alpha1SourcePosition) {
	o.End = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *OryKetoOplV1alpha1ParseError) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OryKetoOplV1alpha1ParseError) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *OryKetoOplV1alpha1ParseError) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *OryKetoOplV1alpha1ParseError) SetMessage(v string) {
	o.Message = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *OryKetoOplV1alpha1ParseError) GetStart() OryKetoOplV1alpha1SourcePosition {
	if o == nil || o.Start == nil {
		var ret OryKetoOplV1alpha1SourcePosition
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OryKetoOplV1alpha1ParseError) GetStartOk() (*OryKetoOplV1alpha1SourcePosition, bool) {
	if o == nil || o.Start == nil {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *OryKetoOplV1alpha1ParseError) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given OryKetoOplV1alpha1SourcePosition and assigns it to the Start field.
func (o *OryKetoOplV1alpha1ParseError) SetStart(v OryKetoOplV1alpha1SourcePosition) {
	o.Start = &v
}

func (o OryKetoOplV1alpha1ParseError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.End != nil {
		toSerialize["end"] = o.End
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	return json.Marshal(toSerialize)
}

type NullableOryKetoOplV1alpha1ParseError struct {
	value *OryKetoOplV1alpha1ParseError
	isSet bool
}

func (v NullableOryKetoOplV1alpha1ParseError) Get() *OryKetoOplV1alpha1ParseError {
	return v.value
}

func (v *NullableOryKetoOplV1alpha1ParseError) Set(val *OryKetoOplV1alpha1ParseError) {
	v.value = val
	v.isSet = true
}

func (v NullableOryKetoOplV1alpha1ParseError) IsSet() bool {
	return v.isSet
}

func (v *NullableOryKetoOplV1alpha1ParseError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOryKetoOplV1alpha1ParseError(val *OryKetoOplV1alpha1ParseError) *NullableOryKetoOplV1alpha1ParseError {
	return &NullableOryKetoOplV1alpha1ParseError{value: val, isSet: true}
}

func (v NullableOryKetoOplV1alpha1ParseError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOryKetoOplV1alpha1ParseError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
