// Code generated by go-swagger; DO NOT EDIT.

package read

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ory/keto/internal/httpclient/models"
)

// NewPostCheckParams creates a new PostCheckParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostCheckParams() *PostCheckParams {
	return &PostCheckParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostCheckParamsWithTimeout creates a new PostCheckParams object
// with the ability to set a timeout on a request.
func NewPostCheckParamsWithTimeout(timeout time.Duration) *PostCheckParams {
	return &PostCheckParams{
		timeout: timeout,
	}
}

// NewPostCheckParamsWithContext creates a new PostCheckParams object
// with the ability to set a context for a request.
func NewPostCheckParamsWithContext(ctx context.Context) *PostCheckParams {
	return &PostCheckParams{
		Context: ctx,
	}
}

// NewPostCheckParamsWithHTTPClient creates a new PostCheckParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostCheckParamsWithHTTPClient(client *http.Client) *PostCheckParams {
	return &PostCheckParams{
		HTTPClient: client,
	}
}

/* PostCheckParams contains all the parameters to send to the API endpoint
   for the post check operation.

   Typically these are written to a http.Request.
*/
type PostCheckParams struct {

	// Payload.
	Payload *models.RelationQuery

	// MaxDepth.
	//
	// Format: int64
	MaxDepth *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post check params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCheckParams) WithDefaults() *PostCheckParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post check params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCheckParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post check params
func (o *PostCheckParams) WithTimeout(timeout time.Duration) *PostCheckParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post check params
func (o *PostCheckParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post check params
func (o *PostCheckParams) WithContext(ctx context.Context) *PostCheckParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post check params
func (o *PostCheckParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post check params
func (o *PostCheckParams) WithHTTPClient(client *http.Client) *PostCheckParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post check params
func (o *PostCheckParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPayload adds the payload to the post check params
func (o *PostCheckParams) WithPayload(payload *models.RelationQuery) *PostCheckParams {
	o.SetPayload(payload)
	return o
}

// SetPayload adds the payload to the post check params
func (o *PostCheckParams) SetPayload(payload *models.RelationQuery) {
	o.Payload = payload
}

// WithMaxDepth adds the maxDepth to the post check params
func (o *PostCheckParams) WithMaxDepth(maxDepth *int64) *PostCheckParams {
	o.SetMaxDepth(maxDepth)
	return o
}

// SetMaxDepth adds the maxDepth to the post check params
func (o *PostCheckParams) SetMaxDepth(maxDepth *int64) {
	o.MaxDepth = maxDepth
}

// WriteToRequest writes these params to a swagger request
func (o *PostCheckParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Payload != nil {
		if err := r.SetBodyParam(o.Payload); err != nil {
			return err
		}
	}

	if o.MaxDepth != nil {

		// query param max-depth
		var qrMaxDepth int64

		if o.MaxDepth != nil {
			qrMaxDepth = *o.MaxDepth
		}
		qMaxDepth := swag.FormatInt64(qrMaxDepth)
		if qMaxDepth != "" {

			if err := r.SetQueryParam("max-depth", qMaxDepth); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
