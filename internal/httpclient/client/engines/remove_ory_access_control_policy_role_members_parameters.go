// Code generated by go-swagger; DO NOT EDIT.

package engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRemoveOryAccessControlPolicyRoleMembersParams creates a new RemoveOryAccessControlPolicyRoleMembersParams object
// with the default values initialized.
func NewRemoveOryAccessControlPolicyRoleMembersParams() *RemoveOryAccessControlPolicyRoleMembersParams {
	var ()
	return &RemoveOryAccessControlPolicyRoleMembersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveOryAccessControlPolicyRoleMembersParamsWithTimeout creates a new RemoveOryAccessControlPolicyRoleMembersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemoveOryAccessControlPolicyRoleMembersParamsWithTimeout(timeout time.Duration) *RemoveOryAccessControlPolicyRoleMembersParams {
	var ()
	return &RemoveOryAccessControlPolicyRoleMembersParams{

		timeout: timeout,
	}
}

// NewRemoveOryAccessControlPolicyRoleMembersParamsWithContext creates a new RemoveOryAccessControlPolicyRoleMembersParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemoveOryAccessControlPolicyRoleMembersParamsWithContext(ctx context.Context) *RemoveOryAccessControlPolicyRoleMembersParams {
	var ()
	return &RemoveOryAccessControlPolicyRoleMembersParams{

		Context: ctx,
	}
}

// NewRemoveOryAccessControlPolicyRoleMembersParamsWithHTTPClient creates a new RemoveOryAccessControlPolicyRoleMembersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemoveOryAccessControlPolicyRoleMembersParamsWithHTTPClient(client *http.Client) *RemoveOryAccessControlPolicyRoleMembersParams {
	var ()
	return &RemoveOryAccessControlPolicyRoleMembersParams{
		HTTPClient: client,
	}
}

/*RemoveOryAccessControlPolicyRoleMembersParams contains all the parameters to send to the API endpoint
for the remove ory access control policy role members operation typically these are written to a http.Request
*/
type RemoveOryAccessControlPolicyRoleMembersParams struct {

	/*Flavor
	  The ORY Access Control Policy flavor. Can be "regex", "glob", and "exact".

	*/
	Flavor string
	/*ID
	  The ID of the ORY Access Control Policy Role.

	*/
	ID string
	/*Member
	  The member to be removed.

	*/
	Member string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) WithTimeout(timeout time.Duration) *RemoveOryAccessControlPolicyRoleMembersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) WithContext(ctx context.Context) *RemoveOryAccessControlPolicyRoleMembersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) WithHTTPClient(client *http.Client) *RemoveOryAccessControlPolicyRoleMembersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFlavor adds the flavor to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) WithFlavor(flavor string) *RemoveOryAccessControlPolicyRoleMembersParams {
	o.SetFlavor(flavor)
	return o
}

// SetFlavor adds the flavor to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) SetFlavor(flavor string) {
	o.Flavor = flavor
}

// WithID adds the id to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) WithID(id string) *RemoveOryAccessControlPolicyRoleMembersParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) SetID(id string) {
	o.ID = id
}

// WithMember adds the member to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) WithMember(member string) *RemoveOryAccessControlPolicyRoleMembersParams {
	o.SetMember(member)
	return o
}

// SetMember adds the member to the remove ory access control policy role members params
func (o *RemoveOryAccessControlPolicyRoleMembersParams) SetMember(member string) {
	o.Member = member
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveOryAccessControlPolicyRoleMembersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param flavor
	if err := r.SetPathParam("flavor", o.Flavor); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param member
	if err := r.SetPathParam("member", o.Member); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
