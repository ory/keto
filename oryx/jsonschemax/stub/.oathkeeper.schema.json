{
  "$id": "https://raw.githubusercontent.com/ory/oathkeeper/v0.32.1-beta.1/.schemas/config.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ORY Oathkeeper Configuration",
  "type": "object",
  "definitions": {
    "tlsxSource": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "path": {
          "title": "Path to PEM-encoded Fle",
          "type": "string",
          "examples": ["path/to/file.pem"]
        },
        "base64": {
          "title": "Base64 Encoded Inline",
          "description": "The base64 string of the PEM-encoded file content. Can be generated using for example `base64 -i path/to/file.pem`.",
          "type": "string",
          "examples": [
            "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXG5NSUlEWlRDQ0FrMmdBd0lCQWdJRVY1eE90REFOQmdr..."
          ]
        }
      }
    },
    "tlsx": {
      "title": "HTTPS",
      "description": "Configure HTTP over TLS (HTTPS). All options can also be set using environment variables by replacing dots (`.`) with underscores (`_`) and uppercasing the key. For example, `some.prefix.tls.key.path` becomes `export SOME_PREFIX_TLS_KEY_PATH`. If all keys are left undefined, TLS will be disabled.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "key": {
          "title": "Private Key (PEM)",
          "allOf": [
            {
              "$ref": "#/definitions/tlsxSource"
            }
          ]
        },
        "cert": {
          "title": "TLS Certificate (PEM)",
          "allOf": [
            {
              "$ref": "#/definitions/tlsxSource"
            }
          ]
        }
      }
    },
    "cors": {
      "title": "Cross Origin Resource Sharing (CORS)",
      "description": "Configure [Cross Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/) using the following options.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "title": "Enable CORS",
          "description": "If set to true, CORS will be enabled and preflight-requests (OPTION) will be answered."
        },
        "allowed_origins": {
          "title": "Allowed Origins",
          "description": "A list of origins a cross-domain request can be executed from. If the special * value is present in the list, all origins will be allowed. An origin may contain a wildcard (*) to replace 0 or more characters (i.e.: http://*.domain.com). Usage of wildcards implies a small performance penality. Only one wildcard can be used per origin.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "default": ["*"],
          "uniqueItems": true,
          "examples": [
            "https://example.com",
            "https://*.example.com",
            "https://*.foo.example.com"
          ]
        },
        "allowed_methods": {
          "type": "array",
          "title": "Allowed HTTP Methods",
          "description": "A list of methods the client is allowed to use with cross-domain requests.",
          "items": {
            "type": "string",
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "DELETE",
              "CONNECT",
              "TRACE",
              "PATCH"
            ]
          },
          "uniqueItems": true,
          "default": ["GET", "POST", "PUT", "PATCH", "DELETE"]
        },
        "allowed_headers": {
          "description": "A list of non simple headers the client is allowed to use with cross-domain requests.",
          "title": "Allowed Request HTTP Headers",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minLength": 1,
          "uniqueItems": true,
          "default": ["Authorization", "Content-Type"]
        },
        "exposed_headers": {
          "description": "Indicates which headers are safe to expose to the API of a CORS API specification",
          "title": "Allowed Response HTTP Headers",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minLength": 1,
          "uniqueItems": true,
          "default": ["Content-Type"]
        },
        "allow_credentials": {
          "type": "boolean",
          "title": "Allow HTTP Credentials",
          "default": false,
          "description": "Indicates whether the request can include user credentials like cookies, HTTP authentication or client side SSL certificates."
        },
        "max_age": {
          "type": "number",
          "default": 0,
          "title": "Maximum Age",
          "description": "Indicates how long (in seconds) the results of a preflight request can be cached. The default is 0 which stands for no max age."
        },
        "debug": {
          "type": "boolean",
          "default": false,
          "title": "Enable Debugging",
          "description": "Set to true to debug server side CORS issues."
        }
      },
      "additionalProperties": false
    },
    "handlerSwitch": {
      "title": "Enabled",
      "type": "boolean",
      "default": false,
      "examples": [true],
      "description": "En-/disables this component."
    },
    "scopeStrategy": {
      "title": "Scope Strategy",
      "type": "string",
      "enum": ["hierarchic", "exact", "wildcard", "none"],
      "default": "none",
      "description": "Sets the strategy validation algorithm."
    },
    "configAuthenticatorsAnonymous": {
      "type": "object",
      "title": "Anonymous Authenticator Configuration",
      "description": "This section is optional when the authenticator is disabled.",
      "properties": {
        "subject": {
          "type": "string",
          "title": "Anonymous Subject",
          "examples": ["guest", "anon", "anonymous", "unknown"],
          "default": "anonymous",
          "description": "Sets the anonymous username."
        }
      },
      "additionalProperties": false
    },
    "configAuthenticatorsCookieSession": {
      "type": "object",
      "title": "Cookie Session Authenticator Configuration",
      "description": "This section is optional when the authenticator is disabled.",
      "properties": {
        "check_session_url": {
          "title": "Session Check URL",
          "type": "string",
          "format": "uri",
          "description": "The origin to proxy requests to. If the response is a 200 with body `{ \"subject\": \"...\", \"extra\": {} }`. The request will pass the subject through successfully, otherwise it will be marked as unauthorized.\n\n>If this authenticator is enabled, this value is required.",
          "examples": ["https://session-store-host"]
        },
        "only": {
          "type": "array",
          "items": {
            "type": "string",
            "additionalItems": false
          },
          "title": "Only Cookies",
          "description": "A list of possible cookies to look for on incoming requests, and will fallthrough to the next authenticator if none of the passed cookies are set on the request."
        }
      },
      "required": ["check_session_url"],
      "additionalProperties": false
    },
    "configAuthenticatorsJwt": {
      "type": "object",
      "title": "JWT Authenticator Configuration",
      "description": "This section is optional when the authenticator is disabled.",
      "required": ["jwks_urls"],
      "properties": {
        "required_scope": {
          "type": "array",
          "title": "Required Token Scope",
          "description": "An array of OAuth 2.0 scopes that are required when accessing an endpoint protected by this handler.\n If the token used in the Authorization header did not request that specific scope, the request is denied.",
          "items": {
            "type": "string"
          }
        },
        "target_audience": {
          "title": "Intended Audience",
          "type": "array",
          "description": "An array of audiences that are required when accessing an endpoint protected by this handler.\n If the token used in the Authorization header is not intended for any of the requested audiences, the request is denied.",
          "items": {
            "type": "string"
          }
        },
        "trusted_issuers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowed_algorithms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jwks_urls": {
          "title": "JSON Web Key URLs",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "description": "URLs where ORY Oathkeeper can retrieve JSON Web Keys from for validating the JSON Web Token. Usually something like \"https://my-keys.com/.well-known/jwks.json\". The response of that endpoint must return a JSON Web Key Set (JWKS).\n\n>If this authenticator is enabled, this value is required.",
          "examples": [
            "https://my-website.com/.well-known/jwks.json",
            "https://my-other-website.com/.well-known/jwks.json",
            "file://path/to/local/jwks.json"
          ]
        },
        "scope_strategy": {
          "$ref": "#/definitions/scopeStrategy"
        },
        "token_from": {
          "title": "Token From",
          "description": "The location of the token.\n If not configured, the token will be received from a default location - 'Authorization' header.\n One and only one location (header or query) must be specified.",
          "oneOf": [
            {
              "type": "object",
              "required": ["header"],
              "properties": {
                "header": {
                  "title": "Header",
                  "type": "string",
                  "description": "The header (case insensitive) that must contain a token for request authentication. It can't be set along with query_parameter."
                }
              }
            },
            {
              "type": "object",
              "required": ["query_parameter"],
              "properties": {
                "query_parameter": {
                  "title": "Query Parameter",
                  "type": "string",
                  "description": "The query parameter (case sensitive) that must contain a token for request authentication. It can't be set along with header."
                }
              }
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "configAuthenticatorsOauth2ClientCredentials": {
      "type": "object",
      "title": "OAuth 2.0 Client Credentials Authenticator Configuration",
      "description": "This section is optional when the authenticator is disabled.",
      "properties": {
        "token_url": {
          "type": "string",
          "description": "The OAuth 2.0 Token Endpoint that will be used to validate the client credentials.\n\n>If this authenticator is enabled, this value is required.",
          "format": "uri",
          "examples": ["https://my-website.com/oauth2/token"]
        },
        "required_scope": {
          "type": "array",
          "title": "Request Permissions (Token Scope)",
          "description": "Scopes is an array of OAuth 2.0 scopes that are required when accessing an endpoint protected by this rule.\n If the token used in the Authorization header did not request that specific scope, the request is denied.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["token_url"],
      "additionalProperties": false
    },
    "configAuthenticatorsOauth2Introspection": {
      "type": "object",
      "title": "OAuth 2.0 Introspection Authenticator Configuration",
      "description": "This section is optional when the authenticator is disabled.",
      "properties": {
        "introspection_url": {
          "type": "string",
          "format": "uri",
          "examples": ["https://my-website.com/oauth2/introspection"],
          "title": "OAuth 2.0 Introspection URL",
          "description": "The OAuth 2.0 Token Introspection endpoint URL.\n\n>If this authenticator is enabled, this value is required."
        },
        "scope_strategy": {
          "$ref": "#/definitions/scopeStrategy"
        },
        "pre_authorization": {
          "title": "Pre-Authorization",
          "description": "Enable pre-authorization in cases where the OAuth 2.0 Token Introspection endpoint is protected by OAuth 2.0 Bearer Tokens that can be retrieved using the OAuth 2.0 Client Credentials grant.",
          "type": "object",
          "additionalProperties": false,
          "required": ["client_id", "client_secret", "token_url"],
          "properties": {
            "enabled": {
              "const": true
            },
            "client_id": {
              "type": "string",
              "title": "OAuth 2.0 Client ID",
              "description": "The OAuth 2.0 Client ID to be used for the OAuth 2.0 Client Credentials Grant.\n\n>If pre-authorization is enabled, this value is required."
            },
            "client_secret": {
              "type": "string",
              "title": "OAuth 2.0 Client Secret",
              "description": "The OAuth 2.0 Client Secret to be used for the OAuth 2.0 Client Credentials Grant.\n\n>If pre-authorization is enabled, this value is required."
            },
            "token_url": {
              "type": "string",
              "format": "uri",
              "title": "OAuth 2.0 Token URL",
              "description": "The OAuth 2.0 Token Endpoint where the OAuth 2.0 Client Credentials Grant will be performed.\n\n>If pre-authorization is enabled, this value is required."
            },
            "scope": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "OAuth 2.0 Scope",
              "description": "The OAuth 2.0 Scope to be requested during the OAuth 2.0 Client Credentials Grant.",
              "examples": [["[\"foo\", \"bar\"]"]]
            }
          }
        },
        "required_scope": {
          "title": "Required Scope",
          "description": "An array of OAuth 2.0 scopes that are required when accessing an endpoint protected by this handler.\n If the token used in the Authorization header did not request that specific scope, the request is denied.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target_audience": {
          "title": "Target Audience",
          "description": "An array of audiences that are required when accessing an endpoint protected by this handler.\n If the token used in the Authorization header is not intended for any of the requested audiences, the request is denied.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trusted_issuers": {
          "title": "Trusted Issuers",
          "description": "The token must have been issued by one of the issuers listed in this array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "token_from": {
          "title": "Token From",
          "description": "The location of the token.\n If not configured, the token will be received from a default location - 'Authorization' header.\n One and only one location (header or query) must be specified.",
          "type": "object",
          "oneOf": [
            {
              "required": ["header"],
              "properties": {
                "header": {
                  "title": "Header",
                  "type": "string",
                  "description": "The header (case insensitive) that must contain a token for request authentication.\n It can't be set along with query_parameter."
                }
              }
            },
            {
              "required": ["query_parameter"],
              "properties": {
                "query_parameter": {
                  "title": "Query Parameter",
                  "type": "string",
                  "description": "The query parameter (case sensitive) that must contain a token for request authentication.\n It can't be set along with header."
                }
              }
            }
          ]
        }
      },
      "required": ["introspection_url"],
      "additionalProperties": false
    },
    "configAuthorizersKetoEngineAcpOry": {
      "type": "object",
      "title": "ORY Keto Access Control Policy Authorizer Configuration",
      "description": "This section is optional when the authorizer is disabled.",
      "properties": {
        "base_url": {
          "title": "Base URL",
          "type": "string",
          "format": "uri",
          "description": "The base URL of ORY Keto.\n\n>If this authorizer is enabled, this value is required.",
          "examples": ["http://my-keto/"]
        },
        "required_action": {
          "type": "string",
          "default": "unset"
        },
        "required_resource": {
          "type": "string",
          "default": "unset"
        },
        "subject": {
          "type": "string"
        },
        "flavor": {
          "type": "string"
        }
      },
      "required": ["base_url", "required_action", "required_resource"],
      "additionalProperties": false
    },
    "configMutatorsCookie": {
      "type": "object",
      "title": "Cookie Mutator Configuration",
      "description": "This section is optional when the mutator is disabled.",
      "required": ["cookies"],
      "properties": {
        "cookies": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "configMutatorsHeader": {
      "type": "object",
      "title": "Header Mutator Configuration",
      "description": "This section is optional when the mutator is disabled.",
      "required": ["headers"],
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "configMutatorsHydrator": {
      "type": "object",
      "title": "Hydrator Mutator Configuration",
      "description": "This section is optional when the mutator is disabled.",
      "properties": {
        "api": {
          "additionalProperties": false,
          "required": ["url"],
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "format": "uri"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "basic": {
                  "required": ["username", "password"],
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "retry": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "number_of_retries": {
                  "type": "number",
                  "minimum": 0,
                  "default": 100
                },
                "delay_in_milliseconds": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 3
                }
              }
            }
          }
        }
      },
      "required": ["api"],
      "additionalProperties": false
    },
    "configMutatorsIdToken": {
      "type": "object",
      "title": "ID Token Mutator Configuration",
      "description": "This section is optional when the mutator is disabled.",
      "required": ["jwks_url", "issuer_url"],
      "properties": {
        "claims": {
          "type": "string"
        },
        "issuer_url": {
          "type": "string",
          "title": "Issuer URL",
          "description": "Sets the \"iss\" value of the ID Token.\n\n>If this mutator is enabled, this value is required."
        },
        "jwks_url": {
          "type": "string",
          "format": "uri",
          "title": "JSON Web Key URL",
          "description": "Sets the URL where keys should be fetched from. Supports remote locations (http, https) as well as local filesystem paths.\n\n>If this mutator is enabled, this value is required.",
          "examples": [
            "https://fetch-keys/from/this/location.json",
            "file:///from/this/absolute/location.json",
            "file://../from/this/relative/location.json"
          ]
        },
        "ttl": {
          "type": "string",
          "title": "Expire After",
          "description": "Sets the time-to-live of the JSON Web Token.",
          "pattern": "^[0-9]+(ns|us|ms|s|m|h)$",
          "default": "1m",
          "examples": ["1h", "1m", "30s"]
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "serve": {
      "title": "HTTP(s)",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "api": {
          "type": "object",
          "title": "HTTP REST API",
          "additionalProperties": false,
          "properties": {
            "port": {
              "type": "number",
              "default": 4456,
              "title": "Port",
              "description": "The port to listen on."
            },
            "host": {
              "type": "string",
              "default": "",
              "examples": ["localhost", "127.0.0.1"],
              "title": "Host",
              "description": "The network interface to listen on."
            },
            "cors": {
              "$ref": "#/definitions/cors"
            },
            "tls": {
              "$ref": "#/definitions/tlsx"
            }
          }
        },
        "proxy": {
          "type": "object",
          "title": "HTTP Reverse Proxy",
          "additionalProperties": false,
          "properties": {
            "port": {
              "type": "number",
              "default": 4455,
              "title": "Port",
              "description": "The port to listen on."
            },
            "host": {
              "type": "string",
              "default": "",
              "examples": ["localhost", "127.0.0.1"],
              "title": "Host",
              "description": "The network interface to listen on. Leave empty to listen on all interfaces."
            },
            "timeout": {
              "title": "HTTP Timeouts",
              "description": "Control the reverse proxy's HTTP timeouts.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "read": {
                  "title": "HTTP Read Timeout",
                  "type": "string",
                  "default": "5s",
                  "pattern": "^[0-9]+(ns|us|ms|s|m|h)$",
                  "description": "The maximum duration for reading the entire request, including the body.",
                  "examples": ["5s", "5m", "5h"]
                },
                "write": {
                  "title": "HTTP Write Timeout",
                  "type": "string",
                  "default": "120s",
                  "pattern": "^[0-9]+(ns|us|ms|s|m|h)$",
                  "description": "The maximum duration before timing out writes of the response. Increase this parameter to prevent unexpected closing a client connection if an upstream request is responding slowly.",
                  "examples": ["5s", "5m", "5h"]
                },
                "idle": {
                  "title": "HTTP Idle Timeout",
                  "type": "string",
                  "default": "120s",
                  "pattern": "^[0-9]+(ns|us|ms|s|m|h)$",
                  "description": " The maximum amount of time to wait for any action of a request session, reading data or writing the response.",
                  "examples": ["5s", "5m", "5h"]
                }
              }
            },
            "cors": {
              "$ref": "#/definitions/cors"
            },
            "tls": {
              "$ref": "#/definitions/tlsx"
            }
          }
        }
      }
    },
    "access_rules": {
      "title": "Access Rules",
      "description": "Configure access rules. All sub-keys support configuration reloading without restarting.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "repositories": {
          "title": "Repositories",
          "description": "Locations (list of URLs) where access rules should be fetched from on boot. It is expected that the documents at those locations return a JSON or YAML Array containing ORY Oathkeeper Access Rules:\n\n- If the URL Scheme is `file://`, the access rules (an array of access rules is expected) will be fetched from the local file system.\n- If the URL Scheme is `inline://`, the access rules (an array of access rules is expected) are expected to be a base64 encoded (with padding!) JSON/YAML string (base64_encode(`[{\"id\":\"foo-rule\",\"authenticators\":[....]}]`)).\n- If the URL Scheme is `http://` or `https://`, the access rules (an array of access rules is expected) will be fetched from the provided HTTP(s) location.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "examples": [
            "[\"file://path/to/rules.json\",\"inline://W3siaWQiOiJmb28tcnVsZSIsImF1dGhlbnRpY2F0b3JzIjpbXX1d\",\"https://path-to-my-rules/rules.json\"]"
          ]
        }
      }
    },
    "authenticators": {
      "title": "Authenticators",
      "type": "object",
      "description": "For more information on authenticators head over to: https://www.ory.sh/docs/oathkeeper/pipeline/authn",
      "additionalProperties": false,
      "properties": {
        "anonymous": {
          "title": "Anonymous",
          "description": "The [`anonymous` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#anonymous).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configAuthenticatorsAnonymous"
            }
          }
        },
        "noop": {
          "title": "No Operation (noop)",
          "description": "The [`noop` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#noop).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            }
          }
        },
        "unauthorized": {
          "title": "Unauthorized",
          "description": "The [`unauthorized` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#unauthorized).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            }
          }
        },
        "cookie_session": {
          "title": "Cookie Session",
          "description": "The [`cookie_session` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#cookie_session).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configAuthenticatorsCookieSession"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "jwt": {
          "title": "JSON Web Token (jwt)",
          "description": "The [`jwt` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#jwt).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configAuthenticatorsJwt"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "oauth2_client_credentials": {
          "title": "OAuth 2.0 Client Credentials",
          "description": "The [`oauth2_client_credentials` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#oauth2_client_credentials).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configAuthenticatorsOauth2ClientCredentials"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "oauth2_introspection": {
          "title": "OAuth 2.0 Token Introspection",
          "description": "The [`oauth2_introspection` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#oauth2_introspection).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configAuthenticatorsOauth2Introspection"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        }
      }
    },
    "authorizers": {
      "title": "Authorizers",
      "type": "object",
      "description": "For more information on authorizers head over to: https://www.ory.sh/docs/oathkeeper/pipeline/authz",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "title": "Allow",
          "description": "The [`allow` authorizer](https://www.ory.sh/docs/oathkeeper/pipeline/authz#allow).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            }
          }
        },
        "deny": {
          "title": "Deny",
          "description": "The [`deny` authorizer](https://www.ory.sh/docs/oathkeeper/pipeline/authz#allow).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            }
          }
        },
        "keto_engine_acp_ory": {
          "title": "ORY Keto Access Control Policies Engine",
          "description": "The [`keto_engine_acp_ory` authorizer](https://www.ory.sh/docs/oathkeeper/pipeline/authz#keto_engine_acp_ory).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configAuthorizersKetoEngineAcpOry"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        }
      }
    },
    "mutators": {
      "title": "Mutators",
      "type": "object",
      "description": "For more information on mutators head over to: https://www.ory.sh/docs/oathkeeper/pipeline/mutator",
      "additionalProperties": false,
      "properties": {
        "noop": {
          "title": "No Operation (noop)",
          "description": "The [`noop` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#noop).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            }
          }
        },
        "cookie": {
          "title": "HTTP Cookie",
          "description": "The [`cookie` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#cookie).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configMutatorsCookie"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "header": {
          "title": "HTTP Header",
          "description": "The [`header` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#header).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configMutatorsHeader"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "hydrator": {
          "title": "Hydrator",
          "description": "The [`hydrator` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#hydrator).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configMutatorsHydrator"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "id_token": {
          "title": "ID Token (JSON Web Token)",
          "description": "The [`id_token` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#id_token).",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/definitions/handlerSwitch"
            },
            "config": {
              "$ref": "#/definitions/configMutatorsIdToken"
            }
          },
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        }
      }
    },
    "log": {
      "title": "Log",
      "description": "Configure logging using the following options. Logging will always be sent to stdout and stderr.",
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "default": "info",
          "enum": ["panic", "fatal", "error", "warn", "info", "debug"],
          "title": "Level",
          "description": "Debug enables stack traces on errors. Can also be set using environment variable LOG_LEVEL."
        },
        "format": {
          "type": "string",
          "default": "text",
          "enum": ["text", "json"],
          "title": "Format",
          "description": "The log format can either be text or JSON."
        }
      },
      "additionalProperties": false
    },
    "profiling": {
      "title": "Profiling",
      "description": "Enables CPU or memory profiling if set. For more details on profiling Go programs read [Profiling Go Programs](https://blog.golang.org/profiling-go-programs).",
      "type": "string",
      "enum": ["cpu", "mem"]
    }
  },
  "required": [],
  "additionalProperties": false
}
