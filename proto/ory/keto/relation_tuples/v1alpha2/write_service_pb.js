// source: ory/keto/relation_tuples/v1alpha2/write_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = globalThis;

var buf_validate_validate_pb = require('../../../../buf/validate/validate_pb.js');
goog.object.extend(proto, buf_validate_validate_pb);
var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_field_behavior_pb = require('../../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var google_api_visibility_pb = require('../../../../google/api/visibility_pb.js');
goog.object.extend(proto, google_api_visibility_pb);
var ory_keto_relation_tuples_v1alpha2_relation_tuples_pb = require('../../../../ory/keto/relation_tuples/v1alpha2/relation_tuples_pb.js');
goog.object.extend(proto, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../../../../protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.SubjectCase', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.RestApiSubjectCase', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.repeatedFields_, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.repeatedFields_, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.oneofGroups_);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.oneofGroups_);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
relationTupleDeltasList: jspb.Message.toObjectList(msg.getRelationTupleDeltasList(),
    proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest;
  return proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta;
      reader.readMessage(value,proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.deserializeBinaryFromReader);
      msg.addRelationTupleDeltas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationTupleDeltasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RelationTupleDelta relation_tuple_deltas = 1;
 * @return {!Array<!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta>}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.prototype.getRelationTupleDeltasList = function() {
  return /** @type{!Array<!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta, 1));
};


/**
 * @param {!Array<!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta>} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.prototype.setRelationTupleDeltasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.prototype.addRelationTupleDeltas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest.prototype.clearRelationTupleDeltasList = function() {
  return this.setRelationTupleDeltasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
action: jspb.Message.getFieldWithDefault(msg, 1, 0),
relationTuple: (f = msg.getRelationTuple()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta;
  return proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 2:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.deserializeBinaryFromReader);
      msg.setRelationTuple(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRelationTuple();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action = {
  ACTION_UNSPECIFIED: 0,
  ACTION_INSERT: 1,
  INSERT: 1,
  ACTION_DELETE: 2,
  DELETE: 2
};

/**
 * optional Action action = 1;
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.getAction = function() {
  return /** @type {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RelationTuple relation_tuple = 2;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.getRelationTuple = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple, 2));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.setRelationTuple = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.clearRelationTuple = function() {
  return this.setRelationTuple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.prototype.hasRelationTuple = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
snaptokensList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse;
  return proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.addSnaptokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnaptokensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string snaptokens = 1;
 * @return {!Array<string>}
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.prototype.getSnaptokensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.prototype.setSnaptokensList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.prototype.addSnaptokens = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse.prototype.clearSnaptokensList = function() {
  return this.setSnaptokensList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
relationTuple: (f = msg.getRelationTuple()) && proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest;
  return proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship;
      reader.readMessage(value,proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.deserializeBinaryFromReader);
      msg.setRelationTuple(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationTuple();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.SubjectCase = {
  SUBJECT_NOT_SET: 0,
  SUBJECT_ID: 5,
  SUBJECT_SET: 6
};

/**
 * @return {proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.SubjectCase}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.getSubjectCase = function() {
  return /** @type {proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.SubjectCase} */(jspb.Message.computeOneofCase(this, proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.toObject = function(includeInstance, msg) {
  var f, obj = {
namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
object: jspb.Message.getFieldWithDefault(msg, 2, ""),
relation: jspb.Message.getFieldWithDefault(msg, 3, ""),
subjectId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
subjectSet: (f = msg.getSubjectSet()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship;
  return proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setObject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setRelation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setSubjectId(value);
      break;
    case 6:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSet;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSet.deserializeBinaryFromReader);
      msg.setSubjectSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSubjectSet();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSet.serializeBinaryToWriter
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string object = 2;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.getObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.setObject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string relation = 3;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string subject_id = 5;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.getSubjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.setSubjectId = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.clearSubjectId = function() {
  return jspb.Message.setOneofField(this, 5, proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.hasSubjectId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SubjectSet subject_set = 6;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.SubjectSet}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.getSubjectSet = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.SubjectSet} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSet, 6));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.SubjectSet|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.setSubjectSet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.clearSubjectSet = function() {
  return this.setSubjectSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship.prototype.hasSubjectSet = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Relationship relation_tuple = 1;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.prototype.getRelationTuple = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship} */ (
    jspb.Message.getWrapperField(this, proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship, 1));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.prototype.setRelationTuple = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.prototype.clearRelationTuple = function() {
  return this.setRelationTuple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.prototype.hasRelationTuple = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
relationTuple: (f = msg.getRelationTuple()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse;
  return proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.deserializeBinaryFromReader);
      msg.setRelationTuple(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationTuple();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.serializeBinaryToWriter
    );
  }
};


/**
 * optional RelationTuple relation_tuple = 1;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.prototype.getRelationTuple = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple, 1));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.prototype.setRelationTuple = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.prototype.clearRelationTuple = function() {
  return this.setRelationTuple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse.prototype.hasRelationTuple = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.oneofGroups_ = [[6,7]];

/**
 * @enum {number}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.RestApiSubjectCase = {
  REST_API_SUBJECT_NOT_SET: 0,
  SUBJECT_ID: 6,
  SUBJECT_SET: 7
};

/**
 * @return {proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.RestApiSubjectCase}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getRestApiSubjectCase = function() {
  return /** @type {proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.RestApiSubjectCase} */(jspb.Message.computeOneofCase(this, proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
query: (f = msg.getQuery()) && proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.toObject(includeInstance, f),
relationQuery: (f = msg.getRelationQuery()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationQuery.toObject(includeInstance, f),
namespace: jspb.Message.getFieldWithDefault(msg, 3, ""),
object: jspb.Message.getFieldWithDefault(msg, 4, ""),
relation: jspb.Message.getFieldWithDefault(msg, 5, ""),
subjectId: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
subjectSet: (f = msg.getSubjectSet()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSetQuery.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest;
  return proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query;
      reader.readMessage(value,proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 2:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationQuery;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationQuery.deserializeBinaryFromReader);
      msg.setRelationQuery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setNamespace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setObject(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setRelation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setSubjectId(value);
      break;
    case 7:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSetQuery;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSetQuery.deserializeBinaryFromReader);
      msg.setSubjectSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.serializeBinaryToWriter
    );
  }
  f = message.getRelationQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationQuery.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getObject();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSubjectSet();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSetQuery.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
object: jspb.Message.getFieldWithDefault(msg, 2, ""),
relation: jspb.Message.getFieldWithDefault(msg, 3, ""),
subject: (f = msg.getSubject()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query;
  return proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setObject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setRelation(value);
      break;
    case 4:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject.serializeBinaryToWriter
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string object = 2;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.getObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.setObject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string relation = 3;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Subject subject = 4;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.Subject}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.getSubject = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.Subject} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject, 4));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.Subject|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Query query = 1;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getQuery = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query} */ (
    jspb.Message.getWrapperField(this, proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query, 1));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RelationQuery relation_query = 2;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.RelationQuery}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getRelationQuery = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.RelationQuery} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationQuery, 2));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.RelationQuery|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.setRelationQuery = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.clearRelationQuery = function() {
  return this.setRelationQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.hasRelationQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string namespace = 3;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string object = 4;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.setObject = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string relation = 5;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string subject_id = 6;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getSubjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.setSubjectId = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.clearSubjectId = function() {
  return jspb.Message.setOneofField(this, 6, proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.hasSubjectId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SubjectSetQuery subject_set = 7;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.SubjectSetQuery}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.getSubjectSet = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.SubjectSetQuery} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.SubjectSetQuery, 7));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.SubjectSetQuery|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.setSubjectSet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.clearSubjectSet = function() {
  return this.setSubjectSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.prototype.hasSubjectSet = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse;
  return proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.ory.keto.relation_tuples.v1alpha2);
