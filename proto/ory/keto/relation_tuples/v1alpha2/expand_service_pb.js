// @generated by protoc-gen-es v1.7.2 with parameter "target=js,js_import_style=module"
// @generated from file ory/keto/relation_tuples/v1alpha2/expand_service.proto (package ory.keto.relation_tuples.v1alpha2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RelationTuple, Subject } from "./relation_tuples_pb.js";

/**
 * @generated from enum ory.keto.relation_tuples.v1alpha2.NodeType
 */
export const NodeType = proto3.makeEnum(
  "ory.keto.relation_tuples.v1alpha2.NodeType",
  [
    {no: 0, name: "NODE_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "NODE_TYPE_UNION", localName: "UNION"},
    {no: 2, name: "NODE_TYPE_EXCLUSION", localName: "EXCLUSION"},
    {no: 3, name: "NODE_TYPE_INTERSECTION", localName: "INTERSECTION"},
    {no: 4, name: "NODE_TYPE_LEAF", localName: "LEAF"},
  ],
);

/**
 * The request for an ExpandService.Expand RPC.
 * Expands the given subject set.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.ExpandRequest
 */
export const ExpandRequest = proto3.makeMessageType(
  "ory.keto.relation_tuples.v1alpha2.ExpandRequest",
  () => [
    { no: 1, name: "subject", kind: "message", T: Subject },
    { no: 2, name: "max_depth", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "snaptoken", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * The response for a ExpandService.Expand RPC.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.ExpandResponse
 */
export const ExpandResponse = proto3.makeMessageType(
  "ory.keto.relation_tuples.v1alpha2.ExpandResponse",
  () => [
    { no: 1, name: "tree", kind: "message", T: SubjectTree },
  ],
);

/**
 * @generated from message ory.keto.relation_tuples.v1alpha2.SubjectTree
 */
export const SubjectTree = proto3.makeMessageType(
  "ory.keto.relation_tuples.v1alpha2.SubjectTree",
  () => [
    { no: 1, name: "node_type", kind: "enum", T: proto3.getEnumType(NodeType) },
    { no: 2, name: "subject", kind: "message", T: Subject },
    { no: 4, name: "tuple", kind: "message", T: RelationTuple },
    { no: 3, name: "children", kind: "message", T: SubjectTree, repeated: true },
  ],
);

