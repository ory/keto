// @generated by protoc-gen-es v1.7.2 with parameter "target=dts"
// @generated from file ory/keto/relation_tuples/v1alpha2/version.proto (package ory.keto.relation_tuples.v1alpha2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Request for the VersionService.GetVersion RPC.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.GetVersionRequest
 */
export declare class GetVersionRequest extends Message<GetVersionRequest> {
  constructor(data?: PartialMessage<GetVersionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.GetVersionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVersionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVersionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVersionRequest;

  static equals(a: GetVersionRequest | PlainMessage<GetVersionRequest> | undefined, b: GetVersionRequest | PlainMessage<GetVersionRequest> | undefined): boolean;
}

/**
 * Response of the VersionService.GetVersion RPC.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.GetVersionResponse
 */
export declare class GetVersionResponse extends Message<GetVersionResponse> {
  /**
   * The version string of the Ory Keto instance.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  constructor(data?: PartialMessage<GetVersionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.GetVersionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVersionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVersionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVersionResponse;

  static equals(a: GetVersionResponse | PlainMessage<GetVersionResponse> | undefined, b: GetVersionResponse | PlainMessage<GetVersionResponse> | undefined): boolean;
}

