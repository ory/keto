// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file ory/keto/relation_tuples/v1alpha2/write_service.proto (package ory.keto.relation_tuples.v1alpha2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { RelationQuery, RelationTuple, Subject } from "./relation_tuples_pb.js";

/**
 * The request of a WriteService.TransactRelationTuples RPC.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest
 */
export class TransactRelationTuplesRequest extends Message<TransactRelationTuplesRequest> {
  /**
   * The write delta for the relationships operated in one single transaction.
   * Either all actions succeed or no change takes effect on error.
   *
   * @generated from field: repeated ory.keto.relation_tuples.v1alpha2.RelationTupleDelta relation_tuple_deltas = 1;
   */
  relationTupleDeltas: RelationTupleDelta[] = [];

  constructor(data?: PartialMessage<TransactRelationTuplesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "relation_tuple_deltas", kind: "message", T: RelationTupleDelta, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransactRelationTuplesRequest {
    return new TransactRelationTuplesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransactRelationTuplesRequest {
    return new TransactRelationTuplesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransactRelationTuplesRequest {
    return new TransactRelationTuplesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TransactRelationTuplesRequest | PlainMessage<TransactRelationTuplesRequest> | undefined, b: TransactRelationTuplesRequest | PlainMessage<TransactRelationTuplesRequest> | undefined): boolean {
    return proto3.util.equals(TransactRelationTuplesRequest, a, b);
  }
}

/**
 * Write-delta for a TransactRelationTuplesRequest.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.RelationTupleDelta
 */
export class RelationTupleDelta extends Message<RelationTupleDelta> {
  /**
   * The action to do on the RelationTuple.
   *
   * @generated from field: ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action action = 1;
   */
  action = RelationTupleDelta_Action.UNSPECIFIED;

  /**
   * The target RelationTuple.
   *
   * @generated from field: ory.keto.relation_tuples.v1alpha2.RelationTuple relation_tuple = 2;
   */
  relationTuple?: RelationTuple;

  constructor(data?: PartialMessage<RelationTupleDelta>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.RelationTupleDelta";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "action", kind: "enum", T: proto3.getEnumType(RelationTupleDelta_Action) },
    { no: 2, name: "relation_tuple", kind: "message", T: RelationTuple },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelationTupleDelta {
    return new RelationTupleDelta().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelationTupleDelta {
    return new RelationTupleDelta().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelationTupleDelta {
    return new RelationTupleDelta().fromJsonString(jsonString, options);
  }

  static equals(a: RelationTupleDelta | PlainMessage<RelationTupleDelta> | undefined, b: RelationTupleDelta | PlainMessage<RelationTupleDelta> | undefined): boolean {
    return proto3.util.equals(RelationTupleDelta, a, b);
  }
}

/**
 * @generated from enum ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action
 */
export enum RelationTupleDelta_Action {
  /**
   * Unspecified.
   * The `TransactRelationTuples` RPC ignores this
   * RelationTupleDelta if an action was unspecified.
   *
   * @generated from enum value: ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Insertion of a new RelationTuple.
   * It is ignored if already existing.
   *
   * @generated from enum value: ACTION_INSERT = 1;
   */
  INSERT = 1,

  /**
   * Deletion of the RelationTuple.
   * It is ignored if it does not exist.
   *
   * @generated from enum value: ACTION_DELETE = 2;
   */
  DELETE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(RelationTupleDelta_Action)
proto3.util.setEnumType(RelationTupleDelta_Action, "ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action", [
  { no: 0, name: "ACTION_UNSPECIFIED" },
  { no: 1, name: "ACTION_INSERT" },
  { no: 2, name: "ACTION_DELETE" },
]);

/**
 * The response of a WriteService.TransactRelationTuples rpc.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse
 */
export class TransactRelationTuplesResponse extends Message<TransactRelationTuplesResponse> {
  /**
   * This field is not implemented yet and has no effect.
   * <!--
   * The list of the new latest snapshot tokens of the affected RelationTuple,
   * with the same index as specified in the `relation_tuple_deltas` field of
   * the TransactRelationTuplesRequest request.
   *
   * If the RelationTupleDelta_Action was DELETE
   * the snaptoken is empty at the same index.
   * -->
   *
   * @generated from field: repeated string snaptokens = 1;
   */
  snaptokens: string[] = [];

  constructor(data?: PartialMessage<TransactRelationTuplesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "snaptokens", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransactRelationTuplesResponse {
    return new TransactRelationTuplesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransactRelationTuplesResponse {
    return new TransactRelationTuplesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransactRelationTuplesResponse {
    return new TransactRelationTuplesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TransactRelationTuplesResponse | PlainMessage<TransactRelationTuplesResponse> | undefined, b: TransactRelationTuplesResponse | PlainMessage<TransactRelationTuplesResponse> | undefined): boolean {
    return proto3.util.equals(TransactRelationTuplesResponse, a, b);
  }
}

/**
 * @generated from message ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest
 */
export class DeleteRelationTuplesRequest extends Message<DeleteRelationTuplesRequest> {
  /**
   * @generated from field: ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query query = 1 [deprecated = true];
   * @deprecated
   */
  query?: DeleteRelationTuplesRequest_Query;

  /**
   * @generated from field: ory.keto.relation_tuples.v1alpha2.RelationQuery relation_query = 2;
   */
  relationQuery?: RelationQuery;

  constructor(data?: PartialMessage<DeleteRelationTuplesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "message", T: DeleteRelationTuplesRequest_Query },
    { no: 2, name: "relation_query", kind: "message", T: RelationQuery },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRelationTuplesRequest {
    return new DeleteRelationTuplesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRelationTuplesRequest {
    return new DeleteRelationTuplesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRelationTuplesRequest {
    return new DeleteRelationTuplesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRelationTuplesRequest | PlainMessage<DeleteRelationTuplesRequest> | undefined, b: DeleteRelationTuplesRequest | PlainMessage<DeleteRelationTuplesRequest> | undefined): boolean {
    return proto3.util.equals(DeleteRelationTuplesRequest, a, b);
  }
}

/**
 * The query for deleting relationships
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query
 */
export class DeleteRelationTuplesRequest_Query extends Message<DeleteRelationTuplesRequest_Query> {
  /**
   * Optional. The namespace to query.
   *
   * @generated from field: string namespace = 1;
   */
  namespace = "";

  /**
   * Optional. The object to query for.
   *
   * @generated from field: string object = 2;
   */
  object = "";

  /**
   * Optional. The relation to query for.
   *
   * @generated from field: string relation = 3;
   */
  relation = "";

  /**
   * Optional. The subject to query for.
   *
   * @generated from field: ory.keto.relation_tuples.v1alpha2.Subject subject = 4;
   */
  subject?: Subject;

  constructor(data?: PartialMessage<DeleteRelationTuplesRequest_Query>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesRequest.Query";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "object", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "relation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "message", T: Subject },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRelationTuplesRequest_Query {
    return new DeleteRelationTuplesRequest_Query().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRelationTuplesRequest_Query {
    return new DeleteRelationTuplesRequest_Query().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRelationTuplesRequest_Query {
    return new DeleteRelationTuplesRequest_Query().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRelationTuplesRequest_Query | PlainMessage<DeleteRelationTuplesRequest_Query> | undefined, b: DeleteRelationTuplesRequest_Query | PlainMessage<DeleteRelationTuplesRequest_Query> | undefined): boolean {
    return proto3.util.equals(DeleteRelationTuplesRequest_Query, a, b);
  }
}

/**
 * @generated from message ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse
 */
export class DeleteRelationTuplesResponse extends Message<DeleteRelationTuplesResponse> {
  constructor(data?: PartialMessage<DeleteRelationTuplesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRelationTuplesResponse {
    return new DeleteRelationTuplesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRelationTuplesResponse {
    return new DeleteRelationTuplesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRelationTuplesResponse {
    return new DeleteRelationTuplesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRelationTuplesResponse | PlainMessage<DeleteRelationTuplesResponse> | undefined, b: DeleteRelationTuplesResponse | PlainMessage<DeleteRelationTuplesResponse> | undefined): boolean {
    return proto3.util.equals(DeleteRelationTuplesResponse, a, b);
  }
}

