// source: ory/keto/relation_tuples/v1alpha2/check_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var ory_keto_relation_tuples_v1alpha2_relation_tuples_pb = require('../../../../ory/keto/relation_tuples/v1alpha2/relation_tuples_pb.js');
goog.object.extend(proto, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.CheckRequest', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.CheckResponse', null, global);
goog.exportSymbol('proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.CheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.CheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.CheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.CheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.repeatedFields_, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.repeatedFields_, null);
};
goog.inherits(proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.displayName = 'proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
object: jspb.Message.getFieldWithDefault(msg, 2, ""),
relation: jspb.Message.getFieldWithDefault(msg, 3, ""),
subject: (f = msg.getSubject()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject.toObject(includeInstance, f),
tuple: (f = msg.getTuple()) && ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.toObject(includeInstance, f),
latest: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
snaptoken: jspb.Message.getFieldWithDefault(msg, 6, ""),
maxDepth: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.CheckRequest;
  return proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setObject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelation(value);
      break;
    case 4:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 8:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.deserializeBinaryFromReader);
      msg.setTuple(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnaptoken(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject.serializeBinaryToWriter
    );
  }
  f = message.getTuple();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.serializeBinaryToWriter
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSnaptoken();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string object = 2;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setObject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string relation = 3;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Subject subject = 4;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.Subject}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getSubject = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.Subject} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.Subject, 4));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.Subject|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RelationTuple tuple = 8;
 * @return {?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getTuple = function() {
  return /** @type{?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple} */ (
    jspb.Message.getWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple, 8));
};


/**
 * @param {?proto.ory.keto.relation_tuples.v1alpha2.RelationTuple|undefined} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setTuple = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.clearTuple = function() {
  return this.setTuple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.hasTuple = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool latest = 5;
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setLatest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string snaptoken = 6;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getSnaptoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setSnaptoken = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 max_depth = 7;
 * @return {number}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.getMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckRequest.prototype.setMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
allowed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
snaptoken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.CheckResponse;
  return proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowed(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnaptoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowed();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSnaptoken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool allowed = 1;
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.prototype.getAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponse} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.prototype.setAllowed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string snaptoken = 2;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.prototype.getSnaptoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponse} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponse.prototype.setSnaptoken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.toObject = function(includeInstance, msg) {
  var f, obj = {
allowed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
error: jspb.Message.getFieldWithDefault(msg, 2, ""),
snaptoken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError;
  return proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowed(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnaptoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowed();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSnaptoken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool allowed = 1;
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.getAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.setAllowed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string snaptoken = 3;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.getSnaptoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.prototype.setSnaptoken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
tuplesList: jspb.Message.toObjectList(msg.getTuplesList(),
    ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.toObject, includeInstance),
latest: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
snaptoken: jspb.Message.getFieldWithDefault(msg, 3, ""),
maxDepth: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest;
  return proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple;
      reader.readMessage(value,ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.deserializeBinaryFromReader);
      msg.addTuples(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnaptoken(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTuplesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple.serializeBinaryToWriter
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSnaptoken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * repeated RelationTuple tuples = 1;
 * @return {!Array<!proto.ory.keto.relation_tuples.v1alpha2.RelationTuple>}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.getTuplesList = function() {
  return /** @type{!Array<!proto.ory.keto.relation_tuples.v1alpha2.RelationTuple>} */ (
    jspb.Message.getRepeatedWrapperField(this, ory_keto_relation_tuples_v1alpha2_relation_tuples_pb.RelationTuple, 1));
};


/**
 * @param {!Array<!proto.ory.keto.relation_tuples.v1alpha2.RelationTuple>} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.setTuplesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.RelationTuple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.RelationTuple}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.addTuples = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ory.keto.relation_tuples.v1alpha2.RelationTuple, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.clearTuplesList = function() {
  return this.setTuplesList([]);
};


/**
 * optional bool latest = 2;
 * @return {boolean}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.setLatest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string snaptoken = 3;
 * @return {string}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.getSnaptoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.setSnaptoken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 max_depth = 4;
 * @return {number}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.getMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckRequest.prototype.setMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse;
  return proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError;
      reader.readMessage(value,proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CheckResponseWithError results = 1;
 * @return {!Array<!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError>}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError, 1));
};


/**
 * @param {!Array<!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError>} value
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse} returns this
*/
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError}
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ory.keto.relation_tuples.v1alpha2.CheckResponseWithError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse} returns this
 */
proto.ory.keto.relation_tuples.v1alpha2.BatchCheckResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


goog.object.extend(exports, proto.ory.keto.relation_tuples.v1alpha2);
