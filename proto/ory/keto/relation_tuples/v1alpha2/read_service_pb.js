// @generated by protoc-gen-es v1.7.2 with parameter "target=js,js_import_style=module"
// @generated from file ory/keto/relation_tuples/v1alpha2/read_service.proto (package ory.keto.relation_tuples.v1alpha2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { RelationQuery, RelationTuple, Subject } from "./relation_tuples_pb.js";

/**
 * Request for ReadService.ListRelationTuples RPC.
 * See `ListRelationTuplesRequest_Query` for how to filter the query.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.ListRelationTuplesRequest
 */
export const ListRelationTuplesRequest = proto3.makeMessageType(
  "ory.keto.relation_tuples.v1alpha2.ListRelationTuplesRequest",
  () => [
    { no: 1, name: "query", kind: "message", T: ListRelationTuplesRequest_Query },
    { no: 6, name: "relation_query", kind: "message", T: RelationQuery },
    { no: 2, name: "expand_mask", kind: "message", T: FieldMask },
    { no: 3, name: "snaptoken", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * The query for listing relationships.
 * Clients can specify any optional field to
 * partially filter for specific relationships.
 *
 * Example use cases (namespace is always required):
 *  - object only: display a list of all permissions referring to a specific object
 *  - relation only: get all groups that have members; get all directories that have content
 *  - object & relation: display all subjects that have a specific permission relation
 *  - subject & relation: display all groups a subject belongs to; display all objects a subject has access to
 *  - object & relation & subject: check whether the relation tuple already exists
 *
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.ListRelationTuplesRequest.Query
 */
export const ListRelationTuplesRequest_Query = proto3.makeMessageType(
  "ory.keto.relation_tuples.v1alpha2.ListRelationTuplesRequest.Query",
  () => [
    { no: 1, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "object", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "relation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subject", kind: "message", T: Subject },
  ],
  {localName: "ListRelationTuplesRequest_Query"},
);

/**
 * The response of a ReadService.ListRelationTuples RPC.
 *
 * @generated from message ory.keto.relation_tuples.v1alpha2.ListRelationTuplesResponse
 */
export const ListRelationTuplesResponse = proto3.makeMessageType(
  "ory.keto.relation_tuples.v1alpha2.ListRelationTuplesResponse",
  () => [
    { no: 1, name: "relation_tuples", kind: "message", T: RelationTuple, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

