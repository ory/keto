// source: ory/keto/acl/v1alpha1/write_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var ory_keto_acl_v1alpha1_acl_pb = require('../../../../ory/keto/acl/v1alpha1/acl_pb.js');
goog.object.extend(proto, ory_keto_acl_v1alpha1_acl_pb);
goog.exportSymbol('proto.ory.keto.acl.v1alpha1.RelationTupleDelta', null, global);
goog.exportSymbol('proto.ory.keto.acl.v1alpha1.RelationTupleDelta.Action', null, global);
goog.exportSymbol('proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest', null, global);
goog.exportSymbol('proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.repeatedFields_, null);
};
goog.inherits(proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.displayName = 'proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ory.keto.acl.v1alpha1.RelationTupleDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.acl.v1alpha1.RelationTupleDelta.displayName = 'proto.ory.keto.acl.v1alpha1.RelationTupleDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.repeatedFields_, null);
};
goog.inherits(proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.displayName = 'proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    relationTupleDeltasList: jspb.Message.toObjectList(msg.getRelationTupleDeltasList(),
    proto.ory.keto.acl.v1alpha1.RelationTupleDelta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest;
  return proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ory.keto.acl.v1alpha1.RelationTupleDelta;
      reader.readMessage(value,proto.ory.keto.acl.v1alpha1.RelationTupleDelta.deserializeBinaryFromReader);
      msg.addRelationTupleDeltas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationTupleDeltasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ory.keto.acl.v1alpha1.RelationTupleDelta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RelationTupleDelta relation_tuple_deltas = 1;
 * @return {!Array<!proto.ory.keto.acl.v1alpha1.RelationTupleDelta>}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.prototype.getRelationTupleDeltasList = function() {
  return /** @type{!Array<!proto.ory.keto.acl.v1alpha1.RelationTupleDelta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ory.keto.acl.v1alpha1.RelationTupleDelta, 1));
};


/**
 * @param {!Array<!proto.ory.keto.acl.v1alpha1.RelationTupleDelta>} value
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest} returns this
*/
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.prototype.setRelationTupleDeltasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.prototype.addRelationTupleDeltas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ory.keto.acl.v1alpha1.RelationTupleDelta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest} returns this
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesRequest.prototype.clearRelationTupleDeltasList = function() {
  return this.setRelationTupleDeltasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.acl.v1alpha1.RelationTupleDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    action: jspb.Message.getFieldWithDefault(msg, 1, 0),
    relationTuple: (f = msg.getRelationTuple()) && ory_keto_acl_v1alpha1_acl_pb.RelationTuple.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.acl.v1alpha1.RelationTupleDelta;
  return proto.ory.keto.acl.v1alpha1.RelationTupleDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 2:
      var value = new ory_keto_acl_v1alpha1_acl_pb.RelationTuple;
      reader.readMessage(value,ory_keto_acl_v1alpha1_acl_pb.RelationTuple.deserializeBinaryFromReader);
      msg.setRelationTuple(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.acl.v1alpha1.RelationTupleDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRelationTuple();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ory_keto_acl_v1alpha1_acl_pb.RelationTuple.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.Action = {
  ACTION_UNSPECIFIED: 0,
  INSERT: 1,
  DELETE: 2
};

/**
 * optional Action action = 1;
 * @return {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta.Action}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.getAction = function() {
  return /** @type {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta.Action} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta.Action} value
 * @return {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta} returns this
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RelationTuple relation_tuple = 2;
 * @return {?proto.ory.keto.acl.v1alpha1.RelationTuple}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.getRelationTuple = function() {
  return /** @type{?proto.ory.keto.acl.v1alpha1.RelationTuple} */ (
    jspb.Message.getWrapperField(this, ory_keto_acl_v1alpha1_acl_pb.RelationTuple, 2));
};


/**
 * @param {?proto.ory.keto.acl.v1alpha1.RelationTuple|undefined} value
 * @return {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta} returns this
*/
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.setRelationTuple = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ory.keto.acl.v1alpha1.RelationTupleDelta} returns this
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.clearRelationTuple = function() {
  return this.setRelationTuple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ory.keto.acl.v1alpha1.RelationTupleDelta.prototype.hasRelationTuple = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    snaptokensList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse;
  return proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSnaptokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnaptokensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string snaptokens = 1;
 * @return {!Array<string>}
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.prototype.getSnaptokensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse} returns this
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.prototype.setSnaptokensList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse} returns this
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.prototype.addSnaptokens = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse} returns this
 */
proto.ory.keto.acl.v1alpha1.TransactRelationTuplesResponse.prototype.clearSnaptokensList = function() {
  return this.setSnaptokensList([]);
};


goog.object.extend(exports, proto.ory.keto.acl.v1alpha1);
