syntax = "proto3";

package ory.keto.acl.v1alpha1;

import "ory/keto/acl/v1alpha1/acl.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/ory/keto/proto/ory/keto/acl/v1alpha1;acl";
option csharp_namespace = "Ory.Keto.Acl.V1Alpha1";
option java_multiple_files = true;
option java_outer_classname = "ReadServiceProto";
option java_package = "sh.ory.keto.acl.v1alpha1";
option php_namespace = "Ory\\Keto\\Acl\\V1alpha1";

// The service to query relation tuples.
//
// This service is part of the [read-APIs](../concepts/api-overview.mdx#read-apis).
service ReadService {
  // Lists ACL relation tuples.
  rpc ListRelationTuples(ListRelationTuplesRequest) returns (ListRelationTuplesResponse);
}

// Request for ReadService.ListRelationTuples RPC.
// See `ListRelationTuplesRequest_Query` for how to filter the query.
message ListRelationTuplesRequest {
  // The query for listing relation tuples.
  // Clients can specify any optional field to
  // partially filter for specific relation tuples.
  //
  // Example use cases (namespace is always required):
  //  - object only: display a list of all permissions referring to a specific object
  //  - relation only: get all groups that have members; get all directories that have content
  //  - object & relation: display all subjects that have a specific permission relation
  //  - subject & relation: display all groups a subject belongs to; display all objects a subject has access to
  //  - object & relation & subject: check whether the relation tuple already exists
  //
  message Query {
    // Required. The namespace to query.
    string namespace = 1;
    // Optional. The object to query for.
    string object = 2;
    // Optional. The relation to query for.
    string relation = 3;
    // Optional. The subject to query for.
    Subject subject = 4;
  }
  // All query constraints are concatenated
  // with a logical AND operator.
  //
  // The RelationTuple list from ListRelationTuplesResponse
  // is ordered from the newest RelationTuple to the oldest.
  Query query = 1;
  // This field is not implemented yet and has no effect.
  // <!--
  // Optional. The list of fields to be expanded
  // in the RelationTuple list returned in `ListRelationTuplesResponse`.
  // Leaving this field unspecified means all fields are expanded.
  //
  // Available fields:
  // "object", "relation", "subject",
  // "namespace", "subject.id", "subject.namespace",
  // "subject.object", "subject.relation"
  // -->
  google.protobuf.FieldMask expand_mask = 2;
  // This field is not implemented yet and has no effect.
  // <!--
  // Optional. The snapshot token for this read.
  // -->
  string snaptoken = 3;
  // Optional. The maximum number of
  // RelationTuples to return in the response.
  //
  // Default: 100
  int32 page_size = 4;
  // Optional. An opaque pagination token returned from
  // a previous call to `ListRelationTuples` that
  // indicates where the page should start at.
  //
  // An empty token denotes the first page. All successive
  // pages require the token from the previous page.
  string page_token = 5;
}

// The response of a ReadService.ListRelationTuples RPC.
message ListRelationTuplesResponse {
  // The relation tuples matching the list request.
  repeated RelationTuple relation_tuples = 1;
  // The token required to get the next page.
  // If this is the last page, the token will be the empty string.
  string next_page_token = 2;
}
