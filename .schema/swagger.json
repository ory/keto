{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Ory Keto is a cloud native access control server providing best-practice patterns (RBAC, ABAC, ACL, AWS IAM Policies, Kubernetes Roles, ...) via REST APIs.",
    "title": "ORY Keto",
    "contact": {
      "name": "ORY",
      "url": "https://www.ory.sh",
      "email": "hi@ory.sh"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://github.com/ory/keto/blob/master/LICENSE"
    },
    "version": "Latest"
  },
  "basePath": "/",
  "paths": {
    "/check": {
      "get": {
        "description": "To learn how relation tuples and the check works, head over to [the documentation](/TODO).",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "read"
        ],
        "summary": "Check a relation tuple",
        "operationId": "getCheck",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "object",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "relation",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "string encoding of the subject",
            "name": "subject",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "getCheckResponse",
            "schema": {
              "$ref": "#/definitions/getCheckResponse"
            }
          },
          "400": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "getCheckResponse",
            "schema": {
              "$ref": "#/definitions/getCheckResponse"
            }
          },
          "500": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "To learn how relation tuples and the check works, head over to [the documentation](/TODO).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "read"
        ],
        "summary": "Check a relation tuple",
        "operationId": "postCheck",
        "parameters": [
          {
            "name": "Payload",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InternalRelationTuple"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "getCheckResponse",
            "schema": {
              "$ref": "#/definitions/getCheckResponse"
            }
          },
          "400": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "getCheckResponse",
            "schema": {
              "$ref": "#/definitions/getCheckResponse"
            }
          },
          "500": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/expand": {
      "get": {
        "description": "Expand a relation tuple",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "read"
        ],
        "operationId": "getExpand",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "object",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "relation",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "depth",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "expandTree",
            "schema": {
              "$ref": "#/definitions/expandTree"
            }
          },
          "400": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/health/alive": {
      "get": {
        "description": "This endpoint returns a 200 status code when the HTTP server is up running.\nThis status does currently not include checks whether the database connection is working.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Check alive status",
        "operationId": "isInstanceAlive",
        "responses": {
          "200": {
            "description": "healthStatus",
            "schema": {
              "$ref": "#/definitions/healthStatus"
            }
          },
          "500": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "description": "This endpoint returns a 200 status code when the HTTP server is up running and the environment dependencies (e.g.\nthe database) are responsive as well.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Check readiness status",
        "operationId": "isInstanceReady",
        "responses": {
          "200": {
            "description": "healthStatus",
            "schema": {
              "$ref": "#/definitions/healthStatus"
            }
          },
          "503": {
            "description": "healthNotReadyStatus",
            "schema": {
              "$ref": "#/definitions/healthNotReadyStatus"
            }
          }
        }
      }
    },
    "/relationtuple": {
      "get": {
        "description": "Get all relation tuples that match the query. Only the namespace field is required.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "read"
        ],
        "summary": "Query relation tuples",
        "operationId": "getRelationTuples",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "object",
            "in": "query"
          },
          {
            "type": "string",
            "name": "relation",
            "in": "query"
          },
          {
            "type": "string",
            "name": "subject",
            "in": "query"
          },
          {
            "type": "string",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "getRelationTuplesResponse",
            "schema": {
              "$ref": "#/definitions/getRelationTuplesResponse"
            }
          },
          "404": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Create a relation tuple",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "write"
        ],
        "operationId": "createRelationTuple",
        "parameters": [
          {
            "name": "Payload",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InternalRelationTuple"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "InternalRelationTuple",
            "schema": {
              "$ref": "#/definitions/InternalRelationTuple"
            }
          },
          "400": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a relation tuple",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "write"
        ],
        "operationId": "deleteRelationTuple",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "object",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "relation",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "string encoding of the subject",
            "name": "subject",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is typically 201."
          },
          "400": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "The standard error format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int64"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "message": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "request": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "This endpoint returns the service version typically notated using semantic versioning.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "version"
        ],
        "summary": "Get service version",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "$ref": "#/definitions/version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "InternalRelationTuple": {
      "type": "object",
      "required": [
        "namespace",
        "object",
        "relation",
        "subject"
      ],
      "properties": {
        "namespace": {
          "description": "in: query",
          "type": "string"
        },
        "object": {
          "description": "in: query",
          "type": "string"
        },
        "relation": {
          "description": "in: query",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/subject"
        }
      }
    },
    "expandTree": {
      "type": "object",
      "required": [
        "type",
        "subject"
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/expandTree"
          }
        },
        "subject": {
          "$ref": "#/definitions/subject"
        },
        "type": {
          "type": "string",
          "enum": [
            "union",
            "exclusion",
            "intersection",
            "leaf"
          ]
        }
      }
    },
    "getCheckResponse": {
      "description": "The content of the allowed field is mirrored in the HTTP status code.",
      "type": "object",
      "title": "Represents the response for a check request.",
      "required": [
        "allowed"
      ],
      "properties": {
        "allowed": {
          "description": "whether the relation tuple is allowed",
          "type": "boolean"
        }
      }
    },
    "getRelationTuplesResponse": {
      "type": "object",
      "properties": {
        "is_last_page": {
          "type": "boolean"
        },
        "next_page_token": {
          "type": "string"
        },
        "relation_tuples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalRelationTuple"
          }
        }
      }
    },
    "healthNotReadyStatus": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "Errors contains a list of errors that caused the not ready status.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "healthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status always contains \"ok\".",
          "type": "string"
        }
      }
    },
    "subject": {
      "type": "string"
    },
    "version": {
      "type": "object",
      "properties": {
        "version": {
          "description": "Version is the service's version.",
          "type": "string"
        }
      }
    }
  }
}