{
  "swagger": "2.0",
  "info": {
    "title": "ORY Keto",
    "description": "Ory Keto is a cloud native access control server providing best-practice patterns (RBAC, ABAC, ACL, AWS IAM Policies, Kubernetes Roles, ...) via REST APIs.",
    "version": "Latest",
    "contact": {
      "name": "ORY",
      "url": "https://www.ory.sh",
      "email": "hi@ory.sh"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://github.com/ory/keto/blob/master/LICENSE"
    }
  },
  "basePath": "/",
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/admin/relation-tuples": {
      "delete": {
        "summary": "Deletes relationships based on relation query",
        "operationId": "deleteRelationships",
        "responses": {
          "204": {
            "description": "An empty response.",
            "schema": {}
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "The namespace this relation tuple lives in.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "object",
            "description": "The object related by this tuple.\nIt is an object in the namespace of the tuple.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "relation",
            "description": "The relation between an Object and a Subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_id",
            "description": "A concrete id of the subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.namespace",
            "description": "The namespace of the object and relation\nreferenced in this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.object",
            "description": "The object related by this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.relation",
            "description": "The relation between the object and the subjects.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["relationship"],
        "consumes": ["application/x-www-form-urlencoded"]
      },
      "put": {
        "summary": "Creates a relationship",
        "operationId": "createRelationship",
        "responses": {
          "201": {
            "description": "The created relationship.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.RelationTuple"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "relationTuple",
            "description": "The relationship to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship",
              "required": ["relationTuple"]
            }
          }
        ],
        "tags": ["relationship"]
      },
      "patch": {
        "summary": "Writes one or more relationships in a single transaction.",
        "operationId": "patchRelationships",
        "responses": {
          "204": {
            "description": "An empty response.",
            "schema": {},
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "relationTupleDeltas",
            "description": "The write delta for the relationships operated in one single transaction.\nEither all actions succeed or no change takes effect on error.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.RelationTupleDelta"
              }
            }
          }
        ],
        "tags": ["relationship"]
      }
    },
    "/namespaces": {
      "get": {
        "summary": "Lists Namespaces",
        "description": "Get all namespaces.",
        "operationId": "listRelationshipNamespaces",
        "responses": {
          "200": {
            "description": "The list of namespaces.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ListNamespacesResponse"
            },
            "examples": {
              "application/json": {
                "namespaces": [
                  {
                    "name": "my namespace"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "tags": ["relationship"],
        "consumes": ["application/x-www-form-urlencoded"]
      }
    },
    "/opl/syntax/check": {
      "post": {
        "summary": "Performs a syntax check request.",
        "operationId": "checkOplSyntax",
        "responses": {
          "200": {
            "description": "The result of the syntax checker",
            "schema": {
              "$ref": "#/definitions/ory.keto.opl.v1alpha1.CheckResponse"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        ],
        "tags": ["relationship"],
        "consumes": ["text/plain"]
      }
    },
    "/relation-tuples": {
      "get": {
        "summary": "Lists ACL relationships.",
        "operationId": "getRelationships",
        "responses": {
          "200": {
            "description": "The list of relationships.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ListRelationTuplesResponse"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "Optional. The maximum number of\nRelationTuples to return in the response.\n\nDefault: 100",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "Optional. An opaque pagination token returned from\na previous call to `ListRelationTuples` that\nindicates where the page should start at.\n\nAn empty token denotes the first page. All successive\npages require the token from the previous page.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "The namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "object",
            "description": "The related object in this check.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "relation",
            "description": "The relation between the Object and the Subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_id",
            "description": "A concrete id of the subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.namespace",
            "description": "The namespace of the object and relation\nreferenced in this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.object",
            "description": "The object related by this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.relation",
            "description": "The relation between the object and the subjects.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["relationship"],
        "consumes": ["application/x-www-form-urlencoded"]
      }
    },
    "/relation-tuples/check": {
      "get": {
        "summary": "Performs an authorization check.",
        "operationId": "CheckService_Check",
        "responses": {
          "200": {
            "description": "The response of the permission check, in case it is allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          },
          "403": {
            "description": "The response of the permission check, in case it is not allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "The namespace to evaluate the check.\n\nNote: If you use the expand-API and the check\nevaluates a RelationTuple specifying a SubjectSet as\nsubject or due to a rewrite rule in a namespace config\nthis check request may involve other namespaces automatically.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "object",
            "description": "The related object in this check.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "relation",
            "description": "The relation between the Object and the Subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_id",
            "description": "A concrete id of the subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.namespace",
            "description": "The namespace of the object and relation\nreferenced in this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.object",
            "description": "The object related by this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.relation",
            "description": "The relation between the object and the subjects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "max-depth",
            "description": "The maximum depth to search for a relation.\n\nIf the value is less than 1 or greater than the global\nmax-depth then the global max-depth will be used instead.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": ["permission"],
        "consumes": ["application/x-www-form-urlencoded", "application/json"]
      },
      "post": {
        "summary": "Performs an authorization check.",
        "operationId": "CheckService_Check3",
        "responses": {
          "200": {
            "description": "The response of the permission check, in case it is allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          },
          "403": {
            "description": "The response of the permission check, in case it is not allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request for a CheckService.Check RPC.\nChecks whether a specific subject is related to an object.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckRequest"
            }
          }
        ],
        "tags": ["permission"],
        "consumes": ["application/x-www-form-urlencoded", "application/json"]
      }
    },
    "/relation-tuples/check/openapi": {
      "get": {
        "summary": "Performs an authorization check.",
        "operationId": "CheckService_Check2",
        "responses": {
          "200": {
            "description": "The response of the permission check, in case it is allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          },
          "403": {
            "description": "The response of the permission check, in case it is not allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "The namespace to evaluate the check.\n\nNote: If you use the expand-API and the check\nevaluates a RelationTuple specifying a SubjectSet as\nsubject or due to a rewrite rule in a namespace config\nthis check request may involve other namespaces automatically.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "object",
            "description": "The related object in this check.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "relation",
            "description": "The relation between the Object and the Subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_id",
            "description": "A concrete id of the subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.namespace",
            "description": "The namespace of the object and relation\nreferenced in this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.object",
            "description": "The object related by this subject set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_set.relation",
            "description": "The relation between the object and the subjects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "max-depth",
            "description": "The maximum depth to search for a relation.\n\nIf the value is less than 1 or greater than the global\nmax-depth then the global max-depth will be used instead.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": ["permission"],
        "consumes": ["application/x-www-form-urlencoded", "application/json"]
      },
      "post": {
        "summary": "Performs an authorization check.",
        "operationId": "CheckService_Check4",
        "responses": {
          "200": {
            "description": "The response of the permission check, in case it is allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          },
          "403": {
            "description": "The response of the permission check, in case it is not allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request for a CheckService.Check RPC.\nChecks whether a specific subject is related to an object.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.CheckRequest"
            }
          }
        ],
        "tags": ["permission"],
        "consumes": ["application/x-www-form-urlencoded", "application/json"]
      }
    },
    "/relation-tuples/expand": {
      "get": {
        "summary": "Expands the subject set into a tree of subjects.",
        "operationId": "expandPermissions",
        "responses": {
          "200": {
            "description": "The response of the permission check, in case it is allowed. For the `/openapi` endpoints, the status code is always 200.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.SubjectTree"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "max-depth",
            "description": "The maximum depth of tree to build.\n\nIf the value is less than 1 or greater than the global\nmax-depth then the global max-depth will be used instead.\n\nIt is important to set this parameter to a meaningful\nvalue. Ponder how deep you really want to display this.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "namespace",
            "description": "The namespace of the object and relation\nreferenced in this subject set.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "description": "The object related by this subject set.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "relation",
            "description": "The relation between the object and the subjects.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["permission"],
        "consumes": ["application/x-www-form-urlencoded"]
      }
    },
    "/version": {
      "get": {
        "summary": "Returns the version of the Ory Keto instance.",
        "description": "This endpoint returns the service version typically notated using semantic versioning.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\nX-Forwarded-Proto header to be set.",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "The version of the instance.",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.GetVersionResponse"
            }
          },
          "400": {
            "description": "errorGeneric",
            "schema": {
              "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse"
            }
          }
        },
        "tags": ["version"]
      }
    }
  },
  "definitions": {
    "ory.keto.opl.v1alpha1.CheckResponse": {
      "type": "object",
      "properties": {
        "parseErrors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ory.keto.opl.v1alpha1.ParseError"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ory.keto.opl.v1alpha1.ParseError"
          }
        }
      }
    },
    "ory.keto.opl.v1alpha1.ParseError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "start": {
          "$ref": "#/definitions/ory.keto.opl.v1alpha1.SourcePosition"
        },
        "end": {
          "$ref": "#/definitions/ory.keto.opl.v1alpha1.SourcePosition"
        }
      }
    },
    "ory.keto.opl.v1alpha1.SourcePosition": {
      "type": "object",
      "properties": {
        "Line": {
          "type": "integer",
          "format": "int64"
        },
        "column": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ory.keto.relation_tuples.v1alpha2.CheckRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace to evaluate the check.\n\nNote: If you use the expand-API and the check\nevaluates a RelationTuple specifying a SubjectSet as\nsubject or due to a rewrite rule in a namespace config\nthis check request may involve other namespaces automatically."
        },
        "object": {
          "type": "string",
          "description": "The related object in this check."
        },
        "relation": {
          "type": "string",
          "description": "The relation between the Object and the Subject."
        },
        "subject_id": {
          "type": "string",
          "description": "A concrete id of the subject."
        },
        "subject_set": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.SubjectSetQuery",
          "description": "A subject set that expands to more Subjects.\nMore information are available under [concepts](../concepts/subjects.mdx)."
        },
        "max-depth": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum depth to search for a relation.\n\nIf the value is less than 1 or greater than the global\nmax-depth then the global max-depth will be used instead."
        }
      },
      "description": "The request for a CheckService.Check RPC.\nChecks whether a specific subject is related to an object."
    },
    "ory.keto.relation_tuples.v1alpha2.CheckResponse": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "boolean",
          "description": "Whether the specified subject (id)\nis related to the requested object.\n\nIt is false by default if no ACL matches."
        }
      },
      "description": "The response for a CheckService.Check rpc."
    },
    "ory.keto.relation_tuples.v1alpha2.CreateRelationTupleRequest.Relationship": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace this relation tuple lives in."
        },
        "object": {
          "type": "string",
          "description": "The object related by this tuple.\nIt is an object in the namespace of the tuple."
        },
        "relation": {
          "type": "string",
          "description": "The relation between an Object and a Subject."
        },
        "subject_id": {
          "type": "string",
          "description": "A concrete id of the subject."
        },
        "subject_set": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.SubjectSet",
          "description": "A subject set that expands to more Subjects.\nMore information are available under [concepts](../concepts/subjects.mdx)."
        }
      }
    },
    "ory.keto.relation_tuples.v1alpha2.CreateRelationTupleResponse": {
      "type": "object",
      "properties": {
        "relationTuple": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.RelationTuple",
          "description": "The created relationship."
        }
      },
      "description": "The response from creating a new relationship."
    },
    "ory.keto.relation_tuples.v1alpha2.DeleteRelationTuplesResponse": {
      "type": "object"
    },
    "ory.keto.relation_tuples.v1alpha2.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.ErrorResponse.Error"
        }
      },
      "description": "The standard Ory JSON API error format.",
      "title": "JSON API Error Response",
      "required": ["error"]
    },
    "ory.keto.relation_tuples.v1alpha2.ErrorResponse.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "format": "int64",
          "example": 404,
          "title": "The status code"
        },
        "debug": {
          "type": "string",
          "description": "Debug information is often not exposed to protect against leaking sensitive information.",
          "title": "Debug information"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Further details about the error.",
          "title": "Further error details"
        },
        "id": {
          "type": "string",
          "description": "The error ID is useful when trying to identify various errors in application logic.",
          "title": "The error ID"
        },
        "message": {
          "type": "string",
          "example": "The requested resource could not be found.",
          "description": "The error's message (required).",
          "title": "The error message"
        },
        "reason": {
          "type": "string",
          "description": "Reason holds a human-readable reason for the error.",
          "title": "The error reason"
        },
        "request": {
          "type": "string",
          "example": "d7ef54b1-ec15-46e6-bccb-524b82c035e6",
          "description": "The request ID is often exposed internally in order to trace\nerrors across service architectures. This is often a UUID.",
          "title": "The request ID"
        },
        "status": {
          "type": "string",
          "example": "Not Found",
          "description": "Status holds the human-readable HTTP status code.",
          "title": "The status description"
        }
      },
      "required": ["message"]
    },
    "ory.keto.relation_tuples.v1alpha2.ExpandResponse": {
      "type": "object",
      "properties": {
        "tree": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.SubjectTree",
          "description": "The tree the requested subject set expands to.\nThe requested subject set is the subject of the root.\n\nThis field can be nil in some circumstances."
        }
      },
      "description": "The response for a ExpandService.Expand RPC."
    },
    "ory.keto.relation_tuples.v1alpha2.GetVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "The version string of the Ory Keto instance."
        }
      },
      "description": "Response of the VersionService.GetVersion RPC."
    },
    "ory.keto.relation_tuples.v1alpha2.ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.Namespace"
          }
        }
      }
    },
    "ory.keto.relation_tuples.v1alpha2.ListRelationTuplesResponse": {
      "type": "object",
      "properties": {
        "relation_tuples": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.RelationTuple"
          },
          "description": "The relationships matching the list request."
        },
        "next_page_token": {
          "type": "string",
          "description": "The token required to get the next page.\nIf this is the last page, the token will be the empty string."
        }
      },
      "description": "The response of a ReadService.ListRelationTuples RPC."
    },
    "ory.keto.relation_tuples.v1alpha2.Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ory.keto.relation_tuples.v1alpha2.NodeType": {
      "type": "string",
      "enum": [
        "unspecified",
        "union",
        "exclusion",
        "intersection",
        "leaf",
        "tuple_to_subject_set",
        "computed_subject_set",
        "not"
      ],
      "default": "unspecified",
      "description": " - union: This node expands to a union of all children.\n - exclusion: Not implemented yet.\n - intersection: Not implemented yet.\n - leaf: This node is a leaf and contains no children.\nIts subject is a `SubjectID` unless `max_depth` was reached.\n - tuple_to_subject_set: This node is a leaf and contains no children.\nIts subject is a `SubjectID` unless `max_depth` was reached.\n - computed_subject_set: This node is a leaf and contains no children.\nIts subject is a `SubjectID` unless `max_depth` was reached.\n - not: This node is a leaf and contains no children.\nIts subject is a `SubjectID` unless `max_depth` was reached."
    },
    "ory.keto.relation_tuples.v1alpha2.RelationTuple": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace this relation tuple lives in."
        },
        "object": {
          "type": "string",
          "description": "The object related by this tuple.\nIt is an object in the namespace of the tuple."
        },
        "relation": {
          "type": "string",
          "description": "The relation between an Object and a Subject."
        },
        "subject_id": {
          "type": "string",
          "description": "A concrete id of the subject."
        },
        "subject_set": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.SubjectSet",
          "description": "A subject set that expands to more Subjects.\nMore information are available under [concepts](../concepts/subjects.mdx)."
        }
      },
      "description": "RelationTuple defines a relation between an Object and a Subject.",
      "required": ["namespace", "object", "relation"]
    },
    "ory.keto.relation_tuples.v1alpha2.RelationTupleDelta": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action",
          "description": "The action to do on the RelationTuple."
        },
        "relation_tuple": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.RelationTuple",
          "description": "The target RelationTuple."
        }
      },
      "description": "Write-delta for a TransactRelationTuplesRequest.",
      "required": ["action", "relation_tuple"]
    },
    "ory.keto.relation_tuples.v1alpha2.RelationTupleDelta.Action": {
      "type": "string",
      "enum": ["ACTION_UNSPECIFIED", "insert", "delete"],
      "default": "ACTION_UNSPECIFIED",
      "description": " - ACTION_UNSPECIFIED: Unspecified.\nThe `TransactRelationTuples` RPC ignores this\nRelationTupleDelta if an action was unspecified.\n - insert: Insertion of a new RelationTuple.\nIt is ignored if already existing.\n - delete: Deletion of the RelationTuple.\nIt is ignored if it does not exist."
    },
    "ory.keto.relation_tuples.v1alpha2.Subject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A concrete id of the subject."
        },
        "set": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.SubjectSet",
          "description": "A subject set that expands to more Subjects.\nMore information are available under [concepts](../concepts/15_subjects.mdx)."
        }
      },
      "description": "Subject is either a concrete subject id or\na `SubjectSet` expanding to more Subjects."
    },
    "ory.keto.relation_tuples.v1alpha2.SubjectSet": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace of the object and relation\nreferenced in this subject set."
        },
        "object": {
          "type": "string",
          "description": "The object related by this subject set."
        },
        "relation": {
          "type": "string",
          "description": "The relation between the object and the subjects."
        }
      },
      "description": "SubjectSet refers to all subjects who have\nthe same `relation` on an `object`.",
      "required": ["namespace", "object", "relation"]
    },
    "ory.keto.relation_tuples.v1alpha2.SubjectSetQuery": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace of the object and relation\nreferenced in this subject set."
        },
        "object": {
          "type": "string",
          "description": "The object related by this subject set."
        },
        "relation": {
          "type": "string",
          "description": "The relation between the object and the subjects."
        }
      },
      "description": "SubjectSetQuery refers to all subjects who have\nthe same `relation` on an `object`."
    },
    "ory.keto.relation_tuples.v1alpha2.SubjectTree": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.NodeType",
          "description": "The type of the node."
        },
        "subject": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.Subject",
          "description": "The subject this node represents.\nDeprecated: More information is now available in the tuple field."
        },
        "tuple": {
          "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.RelationTuple",
          "description": "The relation tuple this node represents."
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ory.keto.relation_tuples.v1alpha2.SubjectTree"
          },
          "description": "The children of this node.\n\nThis is never set if `node_type` == `NODE_TYPE_LEAF`."
        }
      },
      "required": ["type"]
    },
    "ory.keto.relation_tuples.v1alpha2.TransactRelationTuplesResponse": {
      "type": "object",
      "description": "The response of a WriteService.TransactRelationTuples rpc."
    }
  }
}
